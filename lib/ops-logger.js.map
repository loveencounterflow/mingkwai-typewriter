{
  "version": 3,
  "file": "ops-logger.js",
  "sourceRoot": "..",
  "sources": [
    "src/ops-logger.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,MAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,YAAA,EAAA,SAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B,EAb5B;;;EAeA,CAAA,CAAE,EAAF,CAAA,GAA4B,GAA5B,EAfA;;;;EAkBA,MAAA,GAA4B;;EAC5B,CAAA,CAAE,MAAF,CAAA,GAA8B,OAAA,CAAQ,UAAR,CAA9B;;EACA,QAAA,GAA4B,MAAM,CAAC;;EACnC,CAAA,CAAE,MAAF,EACE,OADF,EAEE,YAFF,CAAA,GAE4B,OAAA,CAAQ,WAAR,CAF5B,EArBA;;;EAyBA,MAAA,GAA4B,CAAE,MAAM,CAAC,OAAP,CAAe,SAAf,CAAF,CAA4B,CAAC;;EACzD,KAAA,GAA4B;;EAC5B,SAAA,GAA4B,QAAA,CAAA,CAAA;AAC1B,QAAA,KAAA,EAAA,EAAA,EAAA;IAAA,CAAA,GAAc,IAAI,CAAC,GAAL,CAAA;IACd,EAAA,GAAc,CAAA,GAAI;IAClB,KAAA,GAAc;IACd,KAAA,GAAc,CAAA,GAAI;IAClB,KAAA,GAAc,YAAA,CAAe,KAAF,GAAY,IAAzB;IACd,EAAA,GAAc,YAAA,CAAkB,EAAL,GAAY,IAAzB;AACd,WAAO,CAAE,KAAF,EAAS,EAAT;EAPmB,EA3B5B;;;;EAqCA,WAAA,GAAc,IAAI,GAAJ,CAAQ,CAEpB,gBAFoB,EAGpB,WAHoB,CAAR,EArCd;;;;EA6CA,IAAC,CAAA,qBAAD,GAAyB,QAAA,CAAE,GAAF,EAAO,CAAP,CAAA;AAEvB,QAAA,KAAA,EAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,GAAA,EAAA,CAAA;;IAAA,IAAU,WAAW,CAAC,GAAZ,CAAgB,GAAhB,CAAV;AAAA,aAAA;;IACA,MAAA,IAAkB,CAAC;IACnB,KAAA,GAAkB,CAAA,CAAA,CAAG,MAAH,CAAA,CAAW,CAAC,QAAZ,CAAqB,CAArB,EAAwB,GAAxB;IAClB,CAAA,mCAA4B,CAAA;IAC5B,MAAA,GAAkB,MAAA,CAAO,SAAP;AACqB,WAAM,MAAM,CAAC,QAAP,CAAA,CAAiB,CAAC,MAAlB,GAA2B,IAAjC;MAAvC,CAAE,MAAM,CAAC,IAAP,CAAY,cAAZ,CAAF,CAA6B,CAAC,MAA9B,CAAA;IAAuC;IACvC,CAAA,CAAE,KAAF,EAAS,EAAT,CAAA,GAAkB,SAAA,CAAA,CAAlB;IACA,OAAA,GAAc,GAAA,CAAI,CAAJ,EAPd;;;;;;IAaA,QAAQ,CAAC,MAAM,CAAC,KAAhB,CAAsB,GAAG,CAAC,IAAJ,CAAS,CAAA,CAAA,CAAG,KAAH,EAAA,CAAA,CAAY,EAAZ,EAAA,CAAA,CAAkB,KAAlB,CAAwB,EAAxB,CAAA,CAA4B,GAAA,CAAI,GAAJ,CAA5B,CAAoC,EAApC,CAAA,CAAwC,OAAxC,CAAgD,EAAhD,CAAT,CAAtB;IACA,MAAM,CAAC,MAAP,CAAgB,CAAA,KAAA,CAAA,CAAQ,KAAR,EAAA,CAAA,CAAiB,EAAjB,EAAA,CAAA,CAAuB,KAAvB,CAA6B,EAA7B,CAAA,CAAiC,GAAA,CAAI,GAAJ,CAAjC,CAAyC,EAAzC,CAAA,CAA6C,OAA7C,CAAqD,MAArD,CAAhB;IACA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,GAAnB,EAAwB,CAAxB;IACA,MAAM,CAAC,SAAP,CAAiB,MAAQ,CAAA,CAAA,CAAG,CAAC,YAA7B,EAhBA;;AAkBA,WAAO;EApBgB,EA7CzB;;;EAoEA,IAAC,CAAA,GAAD,GAAO,QAAA,CAAA,GAAE,CAAF,CAAA;AAEL,QAAA,KAAA,EAAA,EAAA,EAAA,MAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA;;IAAA,MAAA,IAAkB,CAAC;IACnB,KAAA,GAAkB,CAAA,CAAA,CAAG,MAAH,CAAA,CAAW,CAAC,QAAZ,CAAqB,CAArB,EAAwB,GAAxB;IAClB,IAAA,GAAkB;;AAA0C;MAAA,KAAA,mCAAA;;qBAAnC,GAAG,CAAC,QAAJ,CAAa,CAAb,CAAH,GAAuB,CAAvB,GAA8B,GAAA,CAAI,CAAJ;MAAQ,CAAA;;QAA1C,CAAsD,CAAC,IAAvD,CAA4D,GAA5D;IAClB,MAAA,GAAkB,MAAA,CAAO,SAAP;AACqB,WAAM,MAAM,CAAC,QAAP,CAAA,CAAiB,CAAC,MAAlB,GAA2B,IAAjC;MAAvC,CAAE,MAAM,CAAC,IAAP,CAAY,cAAZ,CAAF,CAA6B,CAAC,MAA9B,CAAA;IAAuC;IACvC,CAAA,CAAE,KAAF,EAAS,EAAT,CAAA,GAAkB,SAAA,CAAA,CAAlB,EALA;;;;IASA,OAAO,CAAC,GAAR,CAAY,KAAZ,EAAmB,KAAnB,EAA0B,IAA1B;IACA,QAAQ,CAAC,MAAM,CAAC,KAAhB,CAAsB,GAAG,CAAC,IAAJ,CAAS,CAAA,CAAA,CAAG,KAAH,EAAA,CAAA,CAAY,EAAZ,EAAA,CAAA,CAAkB,KAAlB,CAAwB,EAAxB,CAAA,CAA4B,IAA5B,CAAiC,EAAjC,CAAT,CAAtB;IACA,MAAM,CAAC,MAAP,CAAgB,CAAA,KAAA,CAAA,CAAQ,KAAR,EAAA,CAAA,CAAiB,EAAjB,EAAA,CAAA,CAAuB,KAAvB,CAA6B,EAA7B,CAAA,CAAiC,IAAjC,CAAsC,MAAtC,CAAhB;IACA,MAAM,CAAC,SAAP,CAAiB,MAAQ,CAAA,CAAA,CAAG,CAAC,YAA7B;AACA,WAAO;EAfF,EApEP;;;EAuFA,IAAC,CAAA,GAAD,CAAK,gBAAL;AAvFA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/OPS-LOGGER'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n#...........................................................................................................\n{ jr, }                   = CND\n# { inspect, }              = require 'util'\n# xrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\n_lognr                    = 0\n{ remote, }               = ( require 'electron' )\nrprocess                  = remote.process\n{ assign\n  abspath\n  format_float }          = require './helpers'\n#...........................................................................................................\napp_t0                    = ( remote.require './snarf' ).app_t0\nt_prv                     = app_t0\nget_times                 = ->\n  t           = Date.now()\n  dt          = t - t_prv\n  t_prv       = t\n  app_t       = t - app_t0\n  app_t       = format_float ( app_t ) / 1000\n  dt          = format_float (    dt ) / 1000\n  return { app_t, dt, }\n\n#-----------------------------------------------------------------------------------------------------------\nskip_events = new Set [\n  # '^input'\n  '^ignore-delete'\n  '^keyboard'\n  # '^candidates'\n  ]\n\n#-----------------------------------------------------------------------------------------------------------\n@log_almost_all_events = ( key, d ) ->\n  # whisper 'µ99823', key #, jr d\n  return if skip_events.has key\n  _lognr         += +1\n  lognr           = \"#{_lognr}\".padStart 5, '_'\n  v               = d.value ? {}\n  logger          = jQuery '#logger'\n  ( logger.find ':first-child').remove() while logger.children().length > 1000\n  { app_t, dt, }  = get_times()\n  message     = rpr v\n  # message = ( k for k         of d.value                ).join ', '\n  # message = switch key\n  #   when '^kblevel' then  ( k for k, toggle of S.kblevels when toggle ).join ', '\n  #   else                  ( k for k         of d.value                ).join ', '\n  #.........................................................................................................\n  rprocess.stderr.write CND.blue \"#{app_t} #{dt} #{lognr}: #{rpr key}: #{message}\\n\"\n  logger.append ( \"<div>#{app_t} #{dt} #{lognr}: #{rpr key}: #{message}</div>\" )\n  console.log lognr, key, d\n  logger.scrollTop logger[ 0 ].scrollHeight\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@log = ( P... ) ->\n  ### TAINT code duplication ###\n  _lognr         += +1\n  lognr           = \"#{_lognr}\".padStart 5, '_'\n  text            = ( ( if CND.isa_text p then p else rpr p ) for p in P ).join ' '\n  logger          = jQuery '#logger'\n  ( logger.find ':first-child').remove() while logger.children().length > 1000\n  { app_t, dt, }  = get_times()\n  ### TAINT should escape text (or accept HTML?) ###\n  # p.stdout.write CND.green \"#{lognr}\"\n  # p.stderr.write CND.red \"#{lognr}\"\n  console.log app_t, lognr, text\n  rprocess.stderr.write CND.blue \"#{app_t} #{dt} #{lognr}: #{text}\\n\"\n  logger.append ( \"<div>#{app_t} #{dt} #{lognr}: #{text}</div>\" )\n  logger.scrollTop logger[ 0 ].scrollHeight\n  return null\n\n\n############################################################################################################\n@log 'logger started'\n\n"
  ]
}