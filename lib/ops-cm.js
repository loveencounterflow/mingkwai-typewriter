// Generated by CoffeeScript 2.3.2
(function() {
  'use strict';
  var CND, PD, alert, badge, debug, help, info, rpr, urge, warn, whisper;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = '明快打字机/OPS-CM';

  debug = CND.get_logger('debug', badge);

  alert = CND.get_logger('alert', badge);

  whisper = CND.get_logger('whisper', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  info = CND.get_logger('info', badge);

  //...........................................................................................................
  PD = require('pipedreams');

  //-----------------------------------------------------------------------------------------------------------
  this._cm_pos = function(obj) {
    return {
      line: obj.line,
      ch: obj.ch
    };
  };

  //-----------------------------------------------------------------------------------------------------------
  this./* Unify position-like objects */_cm_order_pos = function(p, q) {
    return [p, q].sort(function(a, b) {
      if (p.line > q.line) {
        return -1;
      }
      if (p.line < q.line) {
        return +1;
      }
      if (p.ch > q.ch) {
        return -1;
      }
      if (p.ch < q.ch) {
        return +1;
      }
      return 0;
    });
  };

  //-----------------------------------------------------------------------------------------------------------
  this._cm_ordered_from_to = function(range) {
    /* Unify ranges; result will be `{ from: { line, ch, }, to: { line, ch, }, }` where `to` is always on
    or after `from`. */
    var p, q;
    [p, q] = this._cm_order_pos(this._cm_pos(range.anchor), this._cm_pos(range.head));
    return {
      from: p,
      to: q
    };
  };

  //===========================================================================================================

  //-----------------------------------------------------------------------------------------------------------
  this.cm_select_only_first = function() {
    return CodeMirror.commands.singleSelection(S.codemirror.editor);
  };

  this.cm_get_selections = function() {
    return S.codemirror.editor.doc.listSelections();
  };

  /* TAINT actually gets one of the selections; maybe rewrite to obtain first in document order */
  this.cm_get_first_selection = function() {
    return this._cm_ordered_from_to(this.cm_get_selections()[0]);
  };

}).call(this);

//# sourceMappingURL=ops-cm.js.map
