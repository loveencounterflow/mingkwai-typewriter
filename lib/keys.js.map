{
  "version": 3,
  "file": "keys.js",
  "sourceRoot": "..",
  "sources": [
    "src/keys.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n### TAINT consider using e.g. https://www.npmjs.com/package/combokeys ###\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = '明快打字机/KEYS'\nlog                       = CND.get_logger 'plain',   badge\ninfo                      = CND.get_logger 'info',    badge\nalert                     = CND.get_logger 'alert',   badge\ndebug                     = CND.get_logger 'debug',   badge\nwarn                      = CND.get_logger 'warn',    badge\nurge                      = CND.get_logger 'urge',    badge\nwhisper                   = CND.get_logger 'whisper', badge\nhelp                      = CND.get_logger 'help',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\njr                        = JSON.stringify\nassign                    = Object.assign\n#...........................................................................................................\nPD                        = require 'pipedreams'\nXE                        = require './xemitter'\nS                         = require './settings' ### module-global configuration and editor state object ###\n\n#-----------------------------------------------------------------------------------------------------------\n@keycodes = require './blaidddrwg-keycodes'\n\n#-----------------------------------------------------------------------------------------------------------\n@_preprocess_key_up_or_down_event = ( event ) =>\n  # code      = event.keyCode ? event.which\n  code    = event.which\n  name    = []\n  #.........................................................................................................\n  name.push 'alt'       if code is  18  or event.altKey\n  name.push 'altgr'     if code is 225  or event.originalEvent.getModifierState \"AltGraph\"\n  name.push 'ctrl'      if code is  17  or event.ctrlKey\n  name.push 'capslock'  if code is  20\n  name.push 'shift'     if code is  16  or event.shiftKey\n  label = @keycodes.get code\n  unless label in [ 'alt', 'altgr', 'ctrl', 'capslock', 'shift', ]\n    name.push label ? code\n  name  = name.join '+'\n  return { name, code, }\n\n#-----------------------------------------------------------------------------------------------------------\n@$on_key_down = -> ( event ) =>\n  d = @_preprocess_key_up_or_down_event event\n  if d.name in [ 'alt', 'altgr', 'ctrl', 'shift', 'capslock', ] then  S.kblevels.prv_down = d.name\n  else                                                                S.kblevels.prv_down = null\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$on_key_up = -> ( event ) =>\n  key                 = @_preprocess_key_up_or_down_event event\n  prv_down            = S.kblevels.prv_down\n  S.kblevels.prv_down = null\n  #.........................................................................................................\n  if key.name in [ 'alt', 'altgr', 'ctrl', 'shift', 'capslock', ]\n    return unless key.name is prv_down\n  #.........................................................................................................\n  XE.emit PD.new_event '^keyboard', key\n  return true\n\n#-----------------------------------------------------------------------------------------------------------\n@generate_keboard_events = ( jquery_element ) ->\n  jquery_element.on 'keydown',            @$on_key_down()\n  jquery_element.on 'keyup',              @$on_key_up()\n\n#-----------------------------------------------------------------------------------------------------------\n@bind = ( P... ) ->\n  ### Define a key binding; call similar to `XE.listen_to()`:\n\n  ```\n  KEYS.bind 'ctrl+k',    -> log \"ctrl+k\"\n  KEYS.bind 'ctrl+l', @, -> log \"ctrl+l\"\n  ```\n\n  ###\n  [ keyname, self, listener, ] = XE._get_ksl arguments...\n  XE.listen_to '^keyboard', ( d ) ->\n    return null unless d.value.name is keyname\n    return listener.apply self\n\n\n\n\n###\ndocument.onkeypress = (e) ->\n  console.log 'µ22982', e\n  debug 'µ22982', e.keyIdentifier, e.getModifierState\n  # cid = parseInt ( e[ 'keyIdentifier' ].replace /^U\\+/, '' ), 16\n  # cid = 0x3013 if ( CND.type_of cid ) isnt 'number'\n  # debug '©sz3Ku', 'keyIdentifier',    e[ 'keyIdentifier'    ], rpr String.fromCodePoint cid\n  # debug '©hRgmv', 'getModifierState \"Alt\"       ', e.getModifierState \"Alt\"\n  # debug '©hRgmv', 'getModifierState \"AltGraph\"  ', e.getModifierState \"AltGraph\"\n  # debug '©hRgmv', 'getModifierState \"CapsLock\"  ', e.getModifierState \"CapsLock\"\n  # debug '©hRgmv', 'getModifierState \"Control\"   ', e.getModifierState \"Control\"\n  # debug '©hRgmv', 'getModifierState \"Fn\"        ', e.getModifierState \"Fn\"\n  # debug '©hRgmv', 'getModifierState \"FnLock\"    ', e.getModifierState \"FnLock\"\n  # debug '©hRgmv', 'getModifierState \"Hyper\"     ', e.getModifierState \"Hyper\"\n  # debug '©hRgmv', 'getModifierState \"Meta\"      ', e.getModifierState \"Meta\"\n  # debug '©hRgmv', 'getModifierState \"NumLock\"   ', e.getModifierState \"NumLock\"\n  # debug '©hRgmv', 'getModifierState \"OS\"        ', e.getModifierState \"OS\"\n  # debug '©hRgmv', 'getModifierState \"ScrollLock\"', e.getModifierState \"ScrollLock\"\n  # debug '©hRgmv', 'getModifierState \"Shift\"     ', e.getModifierState \"Shift\"\n  # debug '©hRgmv', 'getModifierState \"Super\"     ', e.getModifierState \"Super\"\n  # debug '©hRgmv', 'getModifierState \"Symbol\"    ', e.getModifierState \"Symbol\"\n  # debug '©hRgmv', 'getModifierState \"SymbolLock\"', e.getModifierState \"SymbolLock\"\n  # return null\n###\n\n"
  ]
}