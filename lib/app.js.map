{
  "version": 3,
  "file": "app.js",
  "sourceRoot": "..",
  "sources": [
    "src/app.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/APP'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\nPATH                      = require 'path'\nFS                        = require 'fs'\nURL                       = require 'url'\ninspect                   = ( require 'util' ).inspect\nlog                       = ( P... ) -> process.stdout.write ( rpr P ) + '\\n'\n# { app, globalShortcut, }  = require 'electron'\nwindow                    = null\n# log Object.keys require 'electron'\n{ app, BrowserWindow }    = require 'electron'\nTEMPLATES                 = require './templates'\nPD                        = require 'pipedreams'\nXE                        = require './xemitter'\nIF                        = require 'interflug'\n{ jr, }                   = CND\n#...........................................................................................................\nkb_listener_is_ready      = false\napp_is_ready              = false\npage_html_path            = PATH.resolve PATH.join __dirname, '../public/main.html'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@write_page_source = ->\n  ### Write out the HTML of the main page; this is strictly only needed when template has changed, which we\n  maybe should detect in the future: ###\n  page_source = TEMPLATES.main_2()\n  # page_source = TEMPLATES.minimal()\n  FS.writeFileSync page_html_path, page_source\n  help \"updated page source written to #{rpr PATH.relative process.cwd(), page_html_path}\"\n\n#-----------------------------------------------------------------------------------------------------------\n@list_versions = ->\n  ### Log the most important versions to the console: ###\n  keys = [\n    'v8'\n    'node'\n    'electron'\n    'chrome'\n    'icu'\n    'unicode' ]\n  whisper ( key.padEnd 20 ), process.versions[ key ] for key in keys\n  whisper ( '明快打字机'.padEnd 15 ), ( require '../package.json' ).version\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@listen_to_keyboard = ->\n  on_ready  = =>\n    urge 'µ88782', \"keybvoard event source ready\"\n    kb_listener_is_ready = true\n    @launch() if app_is_ready and kb_listener_is_ready\n  #.........................................................................................................\n  pipeline  = []\n  source    = IF.K.new_keyboard_event_source { on_ready, }\n  pipeline.push source\n  pipeline.push PD.$watch ( d ) -> XE.emit d\n  pipeline.push PD.$drain()\n  PD.pull pipeline...\n\n#-----------------------------------------------------------------------------------------------------------\n@on_app_ready = ->\n  app_is_ready = true\n  @launch() if app_is_ready and kb_listener_is_ready\n\n#-----------------------------------------------------------------------------------------------------------\n@launch = ->\n  debug 'µ11233', 'launch'\n  ### TAINT workaround: obtain configuration from a throw-away state instance ###\n  state   = require './state'\n  S       = state.new()\n  window  = new BrowserWindow S.window.electron\n  #.........................................................................................................\n  window.loadURL URL.format { pathname: page_html_path, protocol: 'file:', slashes: true, }\n  #.........................................................................................................\n  ### TAINT consider to move all exception handlers to module `exception-handler` ###\n  window.on 'unresponsive', ->\n    alert \"window unresponsive!\"\n  #.........................................................................................................\n  process.on 'uncaughtException',  ( error ) ->\n    alert \"uncaught exception\"\n    alert rpr error\n    process.exit 1\n  #.........................................................................................................\n  window.webContents.on 'crashed', ->\n    alert \"window crashed!\"\n    window.close()\n    return null\n  #.........................................................................................................\n  window.once 'ready-to-show', ->\n    # debug '77565-1', 'ready-to-show'\n    window.show()\n    window.maximize()                 if S.window.maximize      ? no\n    window.webContents.openDevTools() if S.window.show_devtools ? no\n    window.webContents.on 'error', ( error ) => warn 'µ76599', error.message\n    ### thx to https://stackoverflow.com/a/44012967/7568091 ###\n    pid                 = process.pid\n    wid                 = await IF.wait_for_window_id_from_pid process.pid\n    XE.emit PD.new_event '^window-id', wid\n    return null\n\n\n############################################################################################################\napp.once 'ready', @on_app_ready.bind @\n@write_page_source()\n@list_versions()\n@listen_to_keyboard()\n\n\n"
  ]
}