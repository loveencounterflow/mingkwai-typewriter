{
  "version": 3,
  "file": "state.js",
  "sourceRoot": "..",
  "sources": [
    "src/state.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/WINDOW'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n# inspect                   = ( require 'util' ).inspect\nPATH                      = require 'path'\n\n#-----------------------------------------------------------------------------------------------------------\n@new = ->\n  R =\n    window:\n      # show_devtools:    true\n      # maximize:         true\n      electron: ### see https://electronjs.org/docs/api/browser-window ###\n        x:                      700\n        y:                      0\n        # width:                  1500\n        width:                  800\n        height:                 600\n\n        # width:                  1200\n        # height:                 600\n        # fullscreen:             true\n\n        backgroundColor:        \"#d6d8dc\" # Set the default background color of the window to match the CSS background color of the page, this prevents any white flickering\n        show:                   false     # Don't show the window until it's ready, this prevents any white flickering\n        frame:                  true\n        transparent:            true\n        icon:                   PATH.join __dirname, '../public/mingkwai-icon.128.png'\n        # icon:                   PATH.join __dirname, '../public/icon@2x.png'\n        title:                  '明快打字机'\n        textAreasAreResizable:  false\n        # darkTheme:              true ### no effect on Mint ###\n        webSecurity:                  true\n        allowRunningInsecureContent:  false\n        defaultEncoding:              'utf-8'\n        nodeIntegration:        true ### required from electron v5.0.0 onwards ###\n    # selectors:      'abcdefghijklmnopqrstuvwxyz'\n    #.......................................................................................................\n    codemirror:\n      #.....................................................................................................\n      editor:                   null ### CodeMirror instance ###\n      is_enlarged:              false\n      #.....................................................................................................\n      settings:\n        # specialCharPlaceholder: function(char) → Element\n        value:                        'console.log( \"helo\" );'\n        autoCloseBrackets:            true\n        direction:                    'ltr'\n        electricChars:                true\n        firstLineNumber:              1\n        indentUnit:                   2\n        indentWithTabs:               true\n        inputStyle:                   'contenteditable'\n        keyMap:                       'sublime'\n        lineNumbers:                  true\n        lineWrapping:                 false\n        matchBrackets:                true\n        # mode:                         'coffeescript'\n        mode:                         'javascript',\n        rtlMoveVisually:              true\n        showCursorWhenSelecting:      true\n        smartIndent:                  true\n        specialChars:                 /[\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b-\\u200f\\u2028\\u2029\\ufeff]/\n        tabSize:                      2\n        theme:                        'monokai'\n        selectionsMayTouch:           true\n        undoDepth:                    200\n        autofocus:                    true\n        cursorBlinkRate:              400\n        cursorScrollMargin:           5\n        cursorHeight:                 1\n        resetSelectionOnContextMenu:  false\n        viewportMargin:               10\n        spellcheck:                   false\n        autocorrect:                  false\n        autocapitalize:               false\n    #.......................................................................................................\n    buffer:         []\n    rows:           []\n    kblevels:\n      prv_down:       null\n      alt:            true\n      altgr:          false\n      shift:          false\n      capslock:       false\n      ctrl:           false\n    query:                      null\n    row_idx:                    0\n    page_idx:                   0\n    page_height:                30\n    bind_left:                  null\n    bind_right:                 null\n    qdt:                        null # query time\n    scroller_last_top:          null\n    ignore_next_scroll_events:  0\n    candidates:                 null\n    shade_offset_top:           null\n    input:                      null\n    scroller:                   null\n  return R\n\n\n# ############################################################################################################\n# if ( remote = ( require 'electron' ).remote )?\n#   global.S = remote.getGlobal 'S'\n#   unless S?\n#     throw new Error \"unable to acquire state\"\n# else\n#   global.S = @new()\n\n"
  ]
}