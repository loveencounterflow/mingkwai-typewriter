{
  "version": 3,
  "file": "state.js",
  "sourceRoot": "..",
  "sources": [
    "src/state.coffee"
  ],
  "names": [],
  "mappings": ";AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B,EAb5B;;;EAeA,IAAA,GAA4B,OAAA,CAAQ,MAAR,EAf5B;;;EAkBA,IAAC,CAAA,GAAD,GAAO,QAAA,CAAA,CAAA;AACL,QAAA;IAAA,CAAA,GACE;MAAA,MAAA,EAGE,CAAA;;;QAAA,QAAA,EACE;UAAA,CAAA,EAAwB,GAAxB;UACA,CAAA,EAAwB,CADxB;UAEA,KAAA,EAAwB,IAFxB;UAGA,MAAA,EAAwB,GAHxB;;;;UASA,eAAA,EAAwB,SATxB;UAUA,IAAA,EAAwB,KAVxB;UAWA,KAAA,EAAwB,IAXxB;UAYA,WAAA,EAAwB,IAZxB;UAaA,IAAA,EAAwB,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,iCAArB,CAbxB;;UAeA,KAAA,EAAwB,OAfxB;UAgBA,qBAAA,EAAwB,KAhBxB;;UAkBA,WAAA,EAA8B,IAlB9B;UAmBA,2BAAA,EAA8B,KAnB9B;UAoBA,eAAA,EAA8B,OApB9B;UAqBA,eAAA,EAAwB;QArBxB;MADF,CAHF;;;iDA4BA,UAAA,EAEE,CAAA;;QAAA,MAAA,EAA0B,6BAA1B;QACA,WAAA,EAA0B,KAD1B;;QAGA,QAAA,EAGE,CAAA;;;UAAA,MAAA,EAA0B,SAA1B;UACA,KAAA,EAA0B,SAD1B;;UAGA,WAAA,EAA0B,IAH1B;UAIA,iBAAA,EAA0B,IAJ1B;UAKA,aAAA,EAA0B,IAL1B;UAMA,uBAAA,EAA0B,IAN1B;UAOA,OAAA,EAA0B;QAP1B;MANF,CA9BF;;MA6CA,MAAA,EAAgB,EA7ChB;MA8CA,IAAA,EAAgB,EA9ChB;MA+CA,QAAA,EACE;QAAA,QAAA,EAAgB,IAAhB;QACA,GAAA,EAAgB,IADhB;QAEA,KAAA,EAAgB,KAFhB;QAGA,KAAA,EAAgB,KAHhB;QAIA,QAAA,EAAgB,KAJhB;QAKA,IAAA,EAAgB;MALhB,CAhDF;MAsDA,KAAA,EAA4B,IAtD5B;MAuDA,OAAA,EAA4B,CAvD5B;MAwDA,QAAA,EAA4B,CAxD5B;MAyDA,WAAA,EAA4B,EAzD5B;MA0DA,SAAA,EAA4B,IA1D5B;MA2DA,UAAA,EAA4B,IA3D5B;MA4DA,GAAA,EAA4B,IA5D5B;MA6DA,iBAAA,EAA4B,IA7D5B;MA8DA,yBAAA,EAA4B,CA9D5B;MA+DA,UAAA,EAA4B,IA/D5B;MAgEA,gBAAA,EAA4B,IAhE5B;MAiEA,KAAA,EAA4B,IAjE5B;MAkEA,QAAA,EAA4B;IAlE5B;AAmEF,WAAO;EArEF;;EAlBP;;;;;;;AAAA",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/WINDOW'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n# inspect                   = ( require 'util' ).inspect\nPATH                      = require 'path'\n\n#-----------------------------------------------------------------------------------------------------------\n@new = ->\n  R =\n    window:\n      # show_devtools:    true\n      # maximize:         true\n      electron: ### see https://electronjs.org/docs/api/browser-window ###\n        x:                      700\n        y:                      0\n        width:                  1500\n        height:                 600\n\n        # width:                  1200\n        # height:                 600\n        # fullscreen:             true\n\n        backgroundColor:        \"#d6d8dc\" # Set the default background color of the window to match the CSS background color of the page, this prevents any white flickering\n        show:                   false     # Don't show the window until it's ready, this prevents any white flickering\n        frame:                  true\n        transparent:            true\n        icon:                   PATH.join __dirname, '../public/mingkwai-icon.128.png'\n        # icon:                   PATH.join __dirname, '../public/icon@2x.png'\n        title:                  '明快打字机'\n        textAreasAreResizable:  false\n        # darkTheme:              true ### no effect on Mint ###\n        webSecurity:                  true\n        allowRunningInsecureContent:  false\n        defaultEncoding:              'utf-8'\n        nodeIntegration:        true ### required from electron v5.0.0 onwards ###\n    # selectors:      'abcdefghijklmnopqrstuvwxyz'\n    #.......................................................................................................\n    codemirror:\n      #.....................................................................................................\n      editor:                   null ### CodeMirror instance ###\n      is_enlarged:              false\n      #.....................................................................................................\n      settings:\n        # mode:                     'coffeescript'\n        # mode:                     'javascript',\n        keyMap:                   'sublime'\n        theme:                    'monokai'\n        # value:                    'console.log( \"helo\" );'\n        lineNumbers:              true\n        autoCloseBrackets:        true\n        matchBrackets:            true\n        showCursorWhenSelecting:  true\n        tabSize:                  2\n    #.......................................................................................................\n    buffer:         []\n    rows:           []\n    kblevels:\n      prv_down:       null\n      alt:            true\n      altgr:          false\n      shift:          false\n      capslock:       false\n      ctrl:           false\n    query:                      null\n    row_idx:                    0\n    page_idx:                   0\n    page_height:                30\n    bind_left:                  null\n    bind_right:                 null\n    qdt:                        null # query time\n    scroller_last_top:          null\n    ignore_next_scroll_events:  0\n    candidates:                 null\n    shade_offset_top:           null\n    input:                      null\n    scroller:                   null\n  return R\n\n\n# ############################################################################################################\n# if ( remote = ( require 'electron' ).remote )?\n#   global.S = remote.getGlobal 'S'\n#   unless S?\n#     throw new Error \"unable to acquire state\"\n# else\n#   global.S = @new()\n\n"
  ]
}