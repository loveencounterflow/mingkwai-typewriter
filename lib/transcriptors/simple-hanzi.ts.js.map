{
  "version": 3,
  "file": "simple-hanzi.ts.js",
  "sourceRoot": "../..",
  "sources": [
    "src/transcriptors/simple-hanzi.ts.coffee"
  ],
  "names": [],
  "mappings": ";AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,YAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,YAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAKA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAhB5B;;;EAkBA,EAAA,GAA4B,OAAA,CAAQ,YAAR,EAlB5B;;;EAoBA,YAAA,GACE;IAAA,kBAAA,EAA4B,GAA5B;IACA,sBAAA,EAA4B;EAD5B,EArBF;;;EAyBA,IAAC,CAAA,aAAD,GAAiB,QAAA,CAAA,CAAA,EAAA;;AAEf,QAAA,CAAA,EAAA,EAAA,EAAA;IAAA,EAAA,GAAM,IAAI,CAAC,GAAL,CAAA;IACN,CAAA,GAAM,OAAA,CAAQ,8BAAR;IACN,EAAA,GAAM,IAAI,CAAC,GAAL,CAAA;IACN,KAAA,CAAM,QAAN,EAAgB,CAAA,KAAA,CAAA,CAAQ,EAAA,GAAK,EAAb,CAAgB,qBAAhB,CAAhB;AACA,WAAO;EANQ;;EAOjB,YAAA,GAAe,IAAC,CAAA,aAAD,CAAA,EAhCf;;;EAmCA,IAAC,CAAA,iBAAD,GAAqB,QAAA,CAAE,IAAF,CAAA;AACnB,QAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,OAAA,EAAA,GAAA,EAAA,IAAA,EAAA,MAAA,EAAA;IAAA,IAAwC,YAAY,CAAC,sBAArD;MAAA,IAAA,GAAkB,IAAI,CAAC,WAAL,CAAA,EAAlB;;IACA,OAAA,GAAkB,YAAY,CAAC,IAAb,CAAkB,IAAlB;IAClB,CAAA,GAAkB;IAClB,KAAA,yCAAA;MAAI,CAAE,MAAF,EAAU,OAAV;MACW,KAAA,2CAAA;;QAAb,CAAC,CAAC,IAAF,CAAO,KAAP;MAAa;MACb,IAAG,CAAC,CAAC,MAAF,GAAW,YAAY,CAAC,kBAA3B;QACE,CAAC,CAAC,MAAF,GAAW,YAAY,CAAC;AACxB,cAFF;;IAFF;AAKA,WAAO;EATY,EAnCrB;;;EA+CA,IAAC,CAAA,aAAD,GAAiB,QAAA,CAAE,CAAF,CAAA;AACf,QAAA;IAAA,UAAA,GAAa,IAAC,CAAA,iBAAD,CAAmB,CAAC,CAAC,KAAK,CAAC,IAA3B;IACb,EAAE,CAAC,IAAH,CAAQ,EAAE,CAAC,SAAH,CAAa,aAAb,EAA4B,CAAE,UAAF,CAA5B,CAAR;AACA,WAAO;EAHQ;AA/CjB",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/TRANSCRIPTORS/SIMPLE-HANZI'\nlog                       = CND.get_logger 'plain',     badge\ndebug                     = CND.get_logger 'debug',     badge\ninfo                      = CND.get_logger 'info',      badge\nwarn                      = CND.get_logger 'warn',      badge\nalert                     = CND.get_logger 'alert',     badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPD                        = require 'pipedreams'\n#...........................................................................................................\nXXX_SETTINGS =\n  max_search_results:         500\n  search_with_lower_case:     true\n\n#-----------------------------------------------------------------------------------------------------------\n@load_keyboard = ->\n  ### TAINT compare filedates, refresh cache ###\n  t0  = Date.now()\n  R   = require '../../.cache/cedict_ts.u8.js'\n  t1  = Date.now()\n  debug 'µ33344', \"took #{t1 - t0}ms to load dictionary\"\n  return R\nkanji_triode = @load_keyboard()\n\n#-----------------------------------------------------------------------------------------------------------\n@kanji_from_pinyin = ( text ) ->\n  text            = text.toLowerCase() if XXX_SETTINGS.search_with_lower_case\n  results         = kanji_triode.find text\n  R               = []\n  for [ pinyin, lemmata, ] in results\n    R.push lemma for lemma in lemmata\n    if R.length > XXX_SETTINGS.max_search_results\n      R.length = XXX_SETTINGS.max_search_results\n      break\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@on_transcribe = ( d ) ->\n  candidates = @kanji_from_pinyin d.value.text\n  XE.emit PD.new_event '^candidates', { candidates, }\n  return null\n\n\n\n\n"
  ]
}