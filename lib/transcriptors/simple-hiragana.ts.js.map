{
  "version": 3,
  "file": "simple-hiragana.ts.js",
  "sourceRoot": "../..",
  "sources": [
    "src/transcriptors/simple-hiragana.ts.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/TRANSCRIPTORS/SIMPLE-HIRAGANA'\nlog                       = CND.get_logger 'plain',     badge\ndebug                     = CND.get_logger 'debug',     badge\ninfo                      = CND.get_logger 'info',      badge\nwarn                      = CND.get_logger 'warn',      badge\nalert                     = CND.get_logger 'alert',     badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nassign                    = Object.assign\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\nPD                        = require 'pipedreams'\n\n#-----------------------------------------------------------------------------------------------------------\n@display_name     = '簡単なひらがな'\n@sigil            = 'ひ'\n@focus_candidates = false\n@_transcribe      = null\n@_hiragana_triode = null\n\n#-----------------------------------------------------------------------------------------------------------\n@init = ->\n  ### TAINT compare filedates, refresh cache ###\n  @_transcribe      = require '../../.cache/jp_kana.kbd.js'\n  @_hiragana_triode = require '../../.cache/jp_kana.cdt.js'\n\n#-----------------------------------------------------------------------------------------------------------\n@transcribe = ( text ) ->\n  R = ''\n  R = ( @_transcribe R + chr ) for chr in Array.from text\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@on_transcribe = ( d ) ->\n  @init() unless ( @_transcribe? and @_hiragana_triode? )\n  #.........................................................................................................\n  { otext, }        = d.value\n  focus_candidates  = @focus_candidates\n  #.........................................................................................................\n  ### Candidates: ###\n  if otext.length is 0\n    XE.emit PD.new_event '^candidates', { candidates: [], focus_candidates, }\n  else\n    candidates        = (  { candidate: lemma, } for [ transcription, lemma, ] in @_hiragana_triode.find otext )\n    XE.emit PD.new_event '^candidates', assign { candidates, focus_candidates, }, d.value\n  #.........................................................................................................\n  ### Keyboard: ###\n  ntext       = @transcribe otext\n  if otext isnt ntext\n    OPS.log 'µ34343', ( rpr otext ) + ' -> ' + ( rpr ntext )\n    XE.emit PD.new_event '^replace-text', assign {}, d.value, { ntext, }\n  return null\n\n\n\n\n"
  ]
}