{
  "version": 3,
  "file": "simple-hiragana.ts.js",
  "sourceRoot": "../..",
  "sources": [
    "src/transcriptors/simple-hiragana.ts.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/TRANSCRIPTORS/SIMPLE-HIRAGANA'\nlog                       = CND.get_logger 'plain',     badge\ndebug                     = CND.get_logger 'debug',     badge\ninfo                      = CND.get_logger 'info',      badge\nwarn                      = CND.get_logger 'warn',      badge\nalert                     = CND.get_logger 'alert',     badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nassign                    = Object.assign\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\nPD                        = require 'pipedreams'\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT compare filedates, refresh cache ###\n@load_kbd = -> require '../../.cache/jp_kana.kbd.js'\n@load_cdt = -> require '../../.cache/jp_kana.cdt.js'\n  # return require '../../.cache/gr_gr.keyboard.wsv.js'\ntranscribe      = @load_kbd()\nhiragana_triode = @load_cdt()\n\n#-----------------------------------------------------------------------------------------------------------\n@transcribe = ( text ) ->\n  R = ''\n  R = ( transcribe R + chr ) for chr in Array.from text\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@display_name = '簡単なひらがな'\n@sigil        = 'ひ'\n\n#-----------------------------------------------------------------------------------------------------------\n@init = -> OPS.log \"#{badge}/init()\"\n\n#-----------------------------------------------------------------------------------------------------------\n@on_transcribe = ( d ) ->\n  #.........................................................................................................\n  # whisper 'µ34343', xrpr change\n  { otext, }  = d.value\n  ntext       = @transcribe otext\n  if otext isnt ntext\n    OPS.log 'µ34343', ( rpr otext ) + ' -> ' + ( rpr ntext )\n    XE.emit PD.new_event '^replace-text', assign {}, d.value, { ntext, }\n  return null\n\n\n\n\n"
  ]
}