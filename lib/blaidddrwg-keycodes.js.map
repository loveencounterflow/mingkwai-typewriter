{
  "version": 3,
  "file": "blaidddrwg-keycodes.js",
  "sourceRoot": "..",
  "sources": [
    "src/blaidddrwg-keycodes.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nkeycode_by_keynames =\n  'backspace':              8\n  'tab':                    9\n  'enter':                  13\n  'shift':                  16\n  'ctrl':                   17\n  'alt':                    18\n  'pause':                  19\n  'capslock':               20\n  'escape':                 27\n  'space':                  32\n  'pageup':                 33\n  'pagedown':               34\n  'end':                    35\n  'home':                   36\n  'left':                   37\n  'up':                     38\n  'right':                  39\n  'down':                   40\n  'insert':                 45\n  'delete':                 46\n  '0':                      48\n  '1':                      49\n  '2':                      50\n  '3':                      51\n  '4':                      52\n  '5':                      53\n  '6':                      54\n  '7':                      55\n  '8':                      56\n  '9':                      57\n  'a':                      65\n  'b':                      66\n  'c':                      67\n  'd':                      68\n  'e':                      69\n  'f':                      70\n  'g':                      71\n  'h':                      72\n  'i':                      73\n  'j':                      74\n  'k':                      75\n  'l':                      76\n  'm':                      77\n  'n':                      78\n  'o':                      79\n  'p':                      80\n  'q':                      81\n  'r':                      82\n  's':                      83\n  't':                      84\n  'u':                      85\n  'v':                      86\n  'w':                      87\n  'x':                      88\n  'y':                      89\n  'z':                      90\n  'meta':                   91 # left  ?????\n  'meta':                   92 # right ?????\n  'select':                 93 # ??????\n  'numpad0':                96\n  'numpad1':                97\n  'numpad2':                98\n  'numpad3':                99\n  'numpad4':                100\n  'numpad5':                101\n  'numpad6':                102\n  'numpad7':                103\n  'numpad8':                104\n  'numpad9':                105\n  'multiply':               106\n  'add':                    107\n  'subtract':               109\n  'decimalpoint':           110\n  'divide':                 111\n  'f1':                     112\n  'f2':                     113\n  'f3':                     114\n  'f4':                     115\n  'f5':                     116\n  'f6':                     117\n  'f7':                     118\n  'f8':                     119\n  'f9':                     120\n  'f10':                    121\n  'f11':                    122\n  'f12':                    123\n  'numlock':                144\n  'scrolllock':             145\n  'semicolon':              186\n  'comma':                  188\n  'minus':                  189\n  'period':                 190\n  'slash':                  191\n  'grave':                  192\n  'leftbracket':            219\n  'backslash':              220\n  'rightbracket':           221\n  'singlequote':            222\n  'altgr':                  225\n  'imecomposition':         229\n  #.........................................................................................................\n  ### TAINT must localize keyboard ###\n  # 'equals':                 187\n  'plus':                   187\n  #.........................................................................................................\n\n\nmodule.exports = map = new Map()\ndo ->\n  for name, code of keycode_by_keynames\n    if ( value = map.get name )\n      warn \"key name #{rpr name} already set to key code #{rpr value}\"\n    else if ( value = map.get code )\n      warn \"key code #{rpr code} already set to key name #{rpr value}\"\n    else\n      map.set name, code\n      map.set code, name\n\n"
  ]
}