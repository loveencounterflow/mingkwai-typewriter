// Generated by CoffeeScript 2.3.2
(function() {
  'use strict';
  var CND, DB, PATH, PD, TRIODE, XE, alert, badge, buffer, debug, echo, help, info, inspect, jr, kana_keyboard, kana_triode, log, rpr, urge, warn, whisper, xrpr;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = '明快打字机/KANA-INPUT';

  log = CND.get_logger('plain', badge);

  debug = CND.get_logger('debug', badge);

  info = CND.get_logger('info', badge);

  warn = CND.get_logger('warn', badge);

  alert = CND.get_logger('alert', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  whisper = CND.get_logger('whisper', badge);

  echo = CND.echo.bind(CND);

  //...........................................................................................................
  PATH = require('path');

  //...........................................................................................................
  // parallel                  = require './parallel-promise'
  DB = require('./db');

  //...........................................................................................................
  // _format                   = require 'pg-format'
  // I                         = ( value ) -> _format '%I', value
  // L                         = ( value ) -> _format '%L', value
  //...........................................................................................................
  ({jr} = CND);

  PD = require('pipedreams');

  // { remote, }               = require 'electron'
  // XE                        = remote.require './xemitter'
  XE = require('./xemitter');

  ({inspect} = require('util'));

  xrpr = function(x) {
    return inspect(x, {
      colors: true,
      breakLength: 2e308,
      maxArrayLength: 2e308,
      depth: 2e308
    });
  };

  //...........................................................................................................
  TRIODE = require('triode');

  kana_keyboard = require('../db/kana.keyboard.json');

  kana_triode = null;

  buffer = [];

  //-----------------------------------------------------------------------------------------------------------
  this.load_kana_triode = function() {
    var i, len, source, target;
    kana_triode = TRIODE.new();
    for (i = 0, len = kana_keyboard.length; i < len; i++) {
      [source, target] = kana_keyboard[i];
      kana_triode[source] = target;
    }
    return null;
  };

  // #-----------------------------------------------------------------------------------------------------------
  // XE.contract '^input', ( d ) ->
  //   urge 'µ55401', jr d
  //   matches = kana_triode[ d.value ]
  //   return null unless matches.length is 1
  //   return matches[ 0 ][ 1 ]

  //-----------------------------------------------------------------------------------------------------------
  XE.contract('^input', function(d) {
    var S, change, doc;
    ({S, change} = d.value);
    doc = S.codemirror.editor.doc;
    // test whether simple selection
    // test whether selection at EOL
    // apply replacements
    // doc.replaceSelection '456', 'around'
    whisper('µ34343', xrpr(change));
    return null;
  });

  //-----------------------------------------------------------------------------------------------------------
  XE.listen_to('<keyboard-level', function(d) {});

  // urge 'µ55402', jr d

  //-----------------------------------------------------------------------------------------------------------
  XE.listen_to('>keyboard-level', function(d) {});

  // urge 'µ55403', jr d

  //###########################################################################################################
  this.load_kana_triode();

}).call(this);

//# sourceMappingURL=kana-input.js.map
