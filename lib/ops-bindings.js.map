{
  "version": 3,
  "file": "ops-bindings.js",
  "sourceRoot": "..",
  "sources": [
    "src/ops-bindings.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\n# CND                       = require 'cnd'\n# rpr                       = CND.rpr\n# badge                     = '明快打字机/OPS-BINDINGS'\n# debug                     = CND.get_logger 'debug',     badge\n# alert                     = CND.get_logger 'alert',     badge\n# whisper                   = CND.get_logger 'whisper',   badge\n# warn                      = CND.get_logger 'warn',      badge\n# help                      = CND.get_logger 'help',      badge\n# urge                      = CND.get_logger 'urge',      badge\n# info                      = CND.get_logger 'info',      badge\nKEYS                      = require './keys'\nXE                        = require './xemitter'\n\n\n#===========================================================================================================\n# KEY BINDINGS\n#-----------------------------------------------------------------------------------------------------------\n@_cm_keymap_move = ( cm, editor_method_name, candidates_method ) ->\n  try\n    return CodeMirror.commands[ editor_method_name ] cm unless S.focus_is_candidates\n    return candidates_method.apply @\n  catch error\n    alert \"when trying to call `CodeMirror.commands.#{editor_method_name}`, an error was thrown\"\n    throw error\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT the defaults for cursor moves are taken from\n* public/codemirror/src/edit/commands.js\n* public/codemirror/keymap/sublime.js\nit would be advantageous to derive them somehow from the source or the running instance\n###\n@move_right         = ( cm ) -> @_cm_keymap_move cm, 'goCharRight', => @_select_delta_candidate { lnr: +1, }\n@move_left          = ( cm ) -> @_cm_keymap_move cm, 'goCharLeft',  => @_select_delta_candidate { lnr: -1, }\n@move_nxtline_first = ( cm ) -> @_cm_keymap_move cm, 'defaultTab',  => @_select_delta_candidate { lcol: 'first', lrow: +1, }\n@move_prvline_first = ( cm ) -> @_cm_keymap_move cm, 'indentLess',  => @_select_delta_candidate { lcol: 'first', lrow: -1, }\n@move_up            = ( cm ) -> @_cm_keymap_move cm, 'goLineUp',    => @log '######### move_up'\n@move_down          = ( cm ) -> @_cm_keymap_move cm, 'goLineDown',  => @log '######### move_down'\n@move_to_home       = ( cm ) -> @_cm_keymap_move cm, 'goLineStartSmart', => @_select_delta_candidate { lrow: 0, lcol: 'first', }\n@move_to_end        = ( cm ) -> @_cm_keymap_move cm, 'goLineEnd',  => @_select_delta_candidate { lrow: 0, lcol: 'last',  }\n\n#-----------------------------------------------------------------------------------------------------------\n@set_codemirror_keybindings = ->\n  mktw_keymap =\n    'Left':       ( cm  ) => @move_left                 cm\n    'Right':      ( cm  ) => @move_right                cm\n    'Up':         ( cm  ) => @move_up                   cm\n    'Down':       ( cm  ) => @move_down                 cm\n    'Tab':        ( cm  ) => @move_nxtline_first        cm\n    'Shift-Tab':  ( cm  ) => @move_prvline_first        cm\n    'Home':       ( cm  ) => @move_to_home              cm\n    'End':        ( cm  ) => @move_to_end               cm\n    'Space':      ( cm  ) => @insert_space_or_selection cm\n  #.........................................................................................................\n  S.codemirror.editor.addKeyMap mktw_keymap\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@set_app_keybindings = ->\n  KEYS.bind 'alt',      @, @show_or_hide_menu_bar\n  KEYS.bind 'shift',    @, @toggle_focusframe\n  KEYS.bind 'ctrl+s',   @, @save_document\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@set_event_bindings = ->\n  XE.listen_to_all @, @log_all_events\n\n"
  ]
}