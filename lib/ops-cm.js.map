{
  "version": 3,
  "file": "ops-cm.js",
  "sourceRoot": "..",
  "sources": [
    "src/ops-cm.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B,EAb5B;;;EAeA,EAAA,GAA4B,OAAA,CAAQ,YAAR,EAf5B;;;EAmBA,IAAC,CAAA,OAAD,GAAW,QAAA,CAAE,GAAF,CAAA;WAAW;MAAE,IAAA,EAAM,GAAG,CAAC,IAAZ;MAAkB,EAAA,EAAI,GAAG,CAAC;IAA1B;EAAX,EAnBX;;;EAsBA,IAAC,kCAAA,aAAD,GAAkB,QAAA,CAAE,CAAF,EAAK,CAAL,CAAA;WAAY,CAAE,CAAF,EAAK,CAAL,CAAS,CAAC,IAAV,CAAe,QAAA,CAAE,CAAF,EAAK,CAAL,CAAA;MAC3C,IAAa,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,IAAxB;AAAA,eAAO,CAAC,EAAR;;MACA,IAAa,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,IAAxB;AAAA,eAAO,CAAC,EAAR;;MACA,IAAa,CAAC,CAAC,EAAF,GAAS,CAAC,CAAC,EAAxB;AAAA,eAAO,CAAC,EAAR;;MACA,IAAa,CAAC,CAAC,EAAF,GAAS,CAAC,CAAC,EAAxB;AAAA,eAAO,CAAC,EAAR;;AACA,aAAQ;IALmC,CAAf;EAAZ,EAtBlB;;;EA8BA,IAAC,CAAA,mBAAD,GAAuB,QAAA,CAAE,KAAF,CAAA,EAAA;;;AAGrB,QAAA,CAAA,EAAA;IAAA,CAAE,CAAF,EAAK,CAAL,CAAA,GAAY,IAAC,CAAA,aAAD,CAAiB,IAAC,CAAA,OAAD,CAAS,KAAK,CAAC,MAAf,CAAjB,EAA4C,IAAC,CAAA,OAAD,CAAS,KAAK,CAAC,IAAf,CAA5C;AACZ,WAAO;MAAE,IAAA,EAAM,CAAR;MAAW,EAAA,EAAI;IAAf;EAJc,EA9BvB;;;;;EAuCA,IAAC,CAAA,oBAAD,GAA0B,QAAA,CAAA,CAAA;WAAG,UAAU,CAAC,QAAQ,CAAC,eAApB,CAAoC,CAAC,CAAC,UAAU,CAAC,MAAjD;EAAH;;EAC1B,IAAC,CAAA,iBAAD,GAA0B,QAAA,CAAA,CAAA;WAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,cAAxB,CAAA;EAAH,EAxC1B;;;EA0CA,IAAC,CAAA,sBAAD,GAA0B,QAAA,CAAA,CAAA;WAAG,IAAC,CAAA,mBAAD,CAAqB,IAAC,CAAA,iBAAD,CAAA,CAAsB,CAAA,CAAA,CAA3C;EAAH;AA1C1B",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/OPS-CM'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n#...........................................................................................................\nPD                        = require 'pipedreams'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_cm_pos = ( obj ) -> { line: obj.line, ch: obj.ch, } ### Unify position-like objects ###\n\n#-----------------------------------------------------------------------------------------------------------\n@_cm_order_pos  = ( p, q ) -> [ p, q, ].sort ( a, b ) ->\n  return -1 if p.line > q.line\n  return +1 if p.line < q.line\n  return -1 if p.ch   > q.ch\n  return +1 if p.ch   < q.ch\n  return  0\n\n#-----------------------------------------------------------------------------------------------------------\n@_cm_ordered_from_to = ( range ) ->\n  ### Unify ranges; result will be `{ from: { line, ch, }, to: { line, ch, }, }` where `to` is always on\n  or after `from`. ###\n  [ p, q, ] = @_cm_order_pos ( @_cm_pos range.anchor ), ( @_cm_pos range.head )\n  return { from: p, to: q, }\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@cm_select_only_first   = -> CodeMirror.commands.singleSelection S.codemirror.editor\n@cm_get_selections      = -> S.codemirror.editor.doc.listSelections()\n### TAINT actually gets one of the selections; maybe rewrite to obtain first in document order ###\n@cm_get_first_selection = -> @_cm_ordered_from_to @cm_get_selections()[ 0 ]\n\n\n\n\n"
  ]
}