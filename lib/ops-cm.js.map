{
  "version": 3,
  "file": "ops-cm.js",
  "sourceRoot": "..",
  "sources": [
    "src/ops-cm.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B,EAb5B;;;EAeA,EAAA,GAA4B,OAAA,CAAQ,YAAR,EAf5B;;;EAmBA,IAAC,CAAA,UAAD,GAAc,QAAA,CAAE,CAAF,CAAA;WAAS;MAAE,IAAA,EAAM,CAAC,CAAC,IAAV;MAAgB,EAAA,EAAI,CAAC,CAAC;IAAtB;EAAT,EAnBd;;;EAsBA,IAAC,kCAAA,mBAAD,GAAwB,QAAA,CAAE,SAAF,CAAA;WAAiB,SAAS,CAAC,IAAV,CAAe,QAAA,CAAE,CAAF,EAAK,CAAL,CAAA;MACtD,IAAa,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,IAAxB;AAAA,eAAO,CAAC,EAAR;;MACA,IAAa,CAAC,CAAC,IAAF,GAAS,CAAC,CAAC,IAAxB;AAAA,eAAO,CAAC,EAAR;;MACA,IAAa,CAAC,CAAC,EAAF,GAAS,CAAC,CAAC,EAAxB;AAAA,eAAO,CAAC,EAAR;;MACA,IAAa,CAAC,CAAC,EAAF,GAAS,CAAC,CAAC,EAAxB;AAAA,eAAO,CAAC,EAAR;;AACA,aAAQ;IAL8C,CAAf;EAAjB,EAtBxB;;;EA8BA,IAAC,CAAA,qBAAD,GAAyB,QAAA,CAAE,KAAF,CAAA,EAAA;;;;;AAKvB,QAAA,CAAA,EAAA;IAAA,CAAE,CAAF,EAAK,CAAL,CAAA,GAAY,IAAC,CAAA,mBAAD,CAAqB,CAAI,IAAC,CAAA,UAAD,CAAY,KAAK,CAAC,MAAlB,CAAJ,EAAkC,IAAC,CAAA,UAAD,CAAY,KAAK,CAAC,IAAlB,CAAlC,CAArB;IACZ,KAAA,CAAM,QAAN,EAAgB,qBAAhB,EAAyC,IAAC,CAAA,UAAD,CAAY,KAAK,CAAC,MAAlB,CAAzC,EAAuE,IAAC,CAAA,UAAD,CAAY,KAAK,CAAC,IAAlB,CAAvE;IACA,KAAA,CAAM,QAAN,EAAgB,uBAAhB,EAAyC,CAAzC,EAA4C,CAA5C;AACA,WAAO;MAAE,IAAA,EAAM,CAAR;MAAW,EAAA,EAAI;IAAf;EARgB,EA9BzB;;;;;EA4CA,IAAC,CAAA,oBAAD,GAA0B,QAAA,CAAA,CAAA;WAAG,UAAU,CAAC,QAAQ,CAAC,eAApB,CAAoC,CAAC,CAAC,UAAU,CAAC,MAAjD;EAAH;;EAC1B,IAAC,CAAA,iBAAD,GAA0B,QAAA,CAAA,CAAA;WAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,cAAxB,CAAA;EAAH,EA7C1B;;;EA+CA,IAAC,CAAA,gCAAD,GAAoC,QAAA,CAAA,CAAA;WAAG,IAAC,CAAA,qBAAD,CAAuB,IAAC,CAAA,iBAAD,CAAA,CAAsB,CAAA,CAAA,CAA7C;EAAH,EA/CpC;;;EAkDA,IAAC,CAAA,WAAD,GAAe,QAAA,CAAE,MAAF,EAAU,KAAV,CAAA;AACb,QAAA;IAAA,QAAA,GACE;MAAA,SAAA,EAAgB,KAAhB;MACA,aAAA,EAAgB,KADhB;MAEA,cAAA,EAAgB;IAFhB;AAGF,WAAO,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,QAApB,CAA6B,MAAM,CAAC,IAApC,EAA0C,MAAM,CAAC,EAAjD,EAAqD,QAArD;EALM,EAlDf;;;EA0DA,IAAC,CAAA,yBAAD,GAA6B,QAAA,CAAA,CAAA;IAC3B,IAAgB,0BAAhB;AAAA,aAAO,EAAP;;IACA,CAAC,CAAC,gBAAgB,CAAC,KAAnB,CAAA;IACA,CAAC,CAAC,gBAAF,GAAqB;AACrB,WAAO;EAJoB,EA1D7B;;;EAiEA,IAAC,CAAA,uBAAD,GAA2B,QAAA,CAAA,CAAA;IACzB,IAAC,CAAA,oBAAD,CAAA;IACA,IAAC,CAAA,yBAAD,CAAA;IACA,CAAC,CAAC,gBAAF,GAAqB,IAAC,CAAA,WAAD,CAAa,IAAC,CAAA,gCAAD,CAAA,CAAb,EAAkD,kBAAlD;AACrB,WAAO;EAJkB;AAjE3B",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/OPS-CM'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n#...........................................................................................................\nPD                        = require 'pipedreams'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_cm_as_pos = ( x ) -> { line: x.line, ch: x.ch, } ### Unify position-like objects ###\n\n#-----------------------------------------------------------------------------------------------------------\n@_cm_order_positions  = ( positions ) -> positions.sort ( a, b ) ->\n  return -1 if a.line < b.line\n  return +1 if a.line > b.line\n  return -1 if a.ch   < b.ch\n  return +1 if a.ch   > b.ch\n  return  0\n\n#-----------------------------------------------------------------------------------------------------------\n@_cm_fromto_from_range = ( range ) ->\n  ### Given a `range` with `anchor` and `head` properties (which must both be positions, i.e.\n  `{ line, ch, }` objects), return a `{ from, to, }` object where `from` comes always before or coincides\n  with `to` in the document. This is needed to convert an object returned e.g. as selection to an\n  argument that can be used by `markText()`. ###\n  [ p, q, ] = @_cm_order_positions [ ( @_cm_as_pos range.anchor ), ( @_cm_as_pos range.head ), ]\n  debug 'µ77833', '_cm_order_positions', ( @_cm_as_pos range.anchor ), ( @_cm_as_pos range.head )\n  debug 'µ77833', '_cm_fromto_from_range', p, q\n  return { from: p, to: q, }\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@cm_select_only_first   = -> CodeMirror.commands.singleSelection S.codemirror.editor\n@cm_get_selections      = -> S.codemirror.editor.doc.listSelections()\n### TAINT actually gets one of the selections; maybe rewrite to obtain first in document order ###\n@cm_get_first_selection_as_fromto = -> @_cm_fromto_from_range @cm_get_selections()[ 0 ]\n\n#-----------------------------------------------------------------------------------------------------------\n@cm_set_mark = ( fromto, clasz ) ->\n  settings =\n    className:      clasz\n    inclusiveLeft:  false\n    inclusiveRight: true\n  return S.codemirror.editor.markText fromto.from, fromto.to, settings\n\n#-----------------------------------------------------------------------------------------------------------\n@cm_clear_translation_mark = ->\n  return 0 unless S.translation_mark?\n  S.translation_mark.clear()\n  S.translation_mark = null\n  return 1\n\n#-----------------------------------------------------------------------------------------------------------\n@cm_set_translation_mark = ->\n  @cm_select_only_first()\n  @cm_clear_translation_mark()\n  S.translation_mark = @cm_set_mark @cm_get_first_selection_as_fromto(), 'translation_mark'\n  return 1\n\n\n\n\n"
  ]
}