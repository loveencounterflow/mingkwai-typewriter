{
  "version": 3,
  "file": "ops-cm.js",
  "sourceRoot": "..",
  "sources": [
    "src/ops-cm.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/OPS-CM'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\n#...........................................................................................................\nPD                        = require 'pipedreams'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@_cm_as_pos = ( x ) -> { line: x.line, ch: x.ch, } ### Unify position-like objects ###\n\n#-----------------------------------------------------------------------------------------------------------\n@_cm_order_positions  = ( positions ) -> positions.sort ( a, b ) ->\n  return -1 if a.line < b.line\n  return +1 if a.line > b.line\n  return -1 if a.ch   < b.ch\n  return +1 if a.ch   > b.ch\n  return  0\n\n#-----------------------------------------------------------------------------------------------------------\n@_cm_fromto_from_range = ( range ) ->\n  ### Given a `range` with `anchor` and `head` properties (which must both be positions, i.e.\n  `{ line, ch, }` objects), return a `{ from, to, }` object where `from` comes always before or coincides\n  with `to` in the document. This is needed to convert an object returned e.g. as selection to an\n  argument that can be used by `markText()`. ###\n  [ p, q, ] = @_cm_order_positions [ ( @_cm_as_pos range.anchor ), ( @_cm_as_pos range.head ), ]\n  return { from: p, to: q, }\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@cm_select_all                    = -> CodeMirror.commands.selectAll        S.codemirror.editor\n@cm_select_only_first             = -> CodeMirror.commands.singleSelection  S.codemirror.editor\n@cm_get_selections                = -> S.codemirror.editor.doc.listSelections()\n@cm_get_selection_texts           = -> S.codemirror.editor.doc.getSelections()\n@cm_get_selections_as_fromtos     = -> ( @_cm_fromto_from_range s for s in @cm_get_selections() )\n# #-----------------------------------------------------------------------------------------------------------\n# @cm_select_only_in_single_line = ->\n\n#-----------------------------------------------------------------------------------------------------------\n@cm_set_mark = ( fromto, clasz ) ->\n  @log 'µ52981', \"@cm_set_mark #{rpr fromto}, #{rpr clasz}\"\n  settings =\n    className:      clasz\n    inclusiveLeft:  true\n    inclusiveRight: true\n  return S.codemirror.editor.markText fromto.from, fromto.to, settings\n\n#-----------------------------------------------------------------------------------------------------------\n# @cm_clear_translation_mark = ->\n#   return 0 unless S.translation_mark?\n#   S.translation_mark.clear()\n#   S.translation_mark = null\n#   return 1\n\n#-----------------------------------------------------------------------------------------------------------\n@cm_get_marks_in_range        = ( fromto    ) -> S.codemirror.editor.findMarks fromto.from, fromto.to\n@cm_get_mark_fromtos_in_range = ( fromto    ) -> ( ( @_cm_as_pos t.find() ) for t in @cm_get_marks_in_position fromto )\n@cm_get_marks_in_position     = ( position  ) -> S.codemirror.editor.findMarksAt position\n@cm_get_cursor                =               -> @_cm_as_pos S.codemirror.editor.getCursor 'head'\n@cm_set_cursor                = ( position  ) -> S.codemirror.editor.setCursor position ### TAINT might want to use options ###\n@cm_get_text                  = ( fromto    ) -> S.codemirror.editor.getRange fromto.from, fromto.to\n@cm_text_from_mark            = ( mark      ) -> @cm_get_text mark.find()\n@cm_text_from_line_idx        = ( line_idx  ) -> S.codemirror.editor.getLine line_idx\n@cm_replace_selection         = ( text      ) -> S.codemirror.editor.doc.replaceSelection text\n@cm_range_is_point            = ( fromto    ) -> CND.equals fromto.from, fromto.to\n\n#-----------------------------------------------------------------------------------------------------------\n@cm_select = ( fromto ) ->\n  @log 'µ53082', \"cm_select: #{rpr fromto}\"\n  return S.codemirror.editor.setSelection fromto.from, fromto.to\n\n#-----------------------------------------------------------------------------------------------------------\n@position_and_clasz_from_mark = ( mark ) ->\n  fromto = mark.find()\n  return { from: ( @_cm_as_pos fromto.from ), to: ( @_cm_as_pos fromto.to ), clasz: ( mark.className ? '' ), }\n\n\n\n\n\n"
  ]
}