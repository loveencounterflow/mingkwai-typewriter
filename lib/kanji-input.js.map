{
  "version": 3,
  "file": "kanji-input.js",
  "sourceRoot": "..",
  "sources": [
    "src/kanji-input.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/KANJI-INPUT'\nlog                       = CND.get_logger 'plain',     badge\ndebug                     = CND.get_logger 'debug',     badge\ninfo                      = CND.get_logger 'info',      badge\nwarn                      = CND.get_logger 'warn',      badge\nalert                     = CND.get_logger 'alert',     badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\n#...........................................................................................................\n# parallel                  = require './parallel-promise'\nDB                        = require './db'\n#...........................................................................................................\n# _format                   = require 'pg-format'\n# I                         = ( value ) -> _format '%I', value\n# L                         = ( value ) -> _format '%L', value\n#...........................................................................................................\n{ jr, }                   = CND\nPD                        = require 'pipedreams'\n# { remote, }               = require 'electron'\n# XE                        = remote.require './xemitter'\nXE                        = require './xemitter'\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\n#...........................................................................................................\nXXX_SETTINGS =\n  max_search_results:         500\n  search_with_lower_case:     true\n\n#-----------------------------------------------------------------------------------------------------------\n@load_keyboard = ->\n  ### TAINT compare filedates, refresh cache ###\n  t0  = Date.now()\n  R   = require '../.cache/cedict_ts.u8.js'\n  t1  = Date.now()\n  debug 'µ33344', \"took #{t1 - t0}ms to load dictionary\"\n  return R\nkanji_triode = @load_keyboard()\n\n#-----------------------------------------------------------------------------------------------------------\n@kanji_from_pinyin = ( text ) ->\n  text            = text.toLowerCase() if XXX_SETTINGS.search_with_lower_case\n  results         = kanji_triode.find text\n  R               = []\n  for [ pinyin, lemmata, ] in results\n    R.push lemma for lemma in lemmata\n    if R.length > XXX_SETTINGS.max_search_results\n      R.length = XXX_SETTINGS.max_search_results\n      break\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to '^input', @, ( d ) ->\n  candidates = @kanji_from_pinyin d.value.text\n  XE.emit PD.new_event '^candidates', { candidates, }\n  return null\n\n\n\n\n"
  ]
}