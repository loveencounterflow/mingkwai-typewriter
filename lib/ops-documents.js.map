{
  "version": 3,
  "file": "ops-documents.js",
  "sourceRoot": "..",
  "sources": [
    "src/ops-documents.coffee"
  ],
  "names": [],
  "mappings": ";AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,GAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B,sBAN5B;;;;;;;;;EAcA,EAAA,GAA4B,OAAA,CAAQ,YAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR,EAhB5B;;;;;EAsBA,IAAC,CAAA,iBAAD,GAAqB,QAAA,CAAA,CAAA,EAAA;;;AAGnB,QAAA;IAAA,SAAA,GAAY,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,sBAArB,CAAb;IACZ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,QAAxB,CAAiC,EAAE,CAAC,YAAH,CAAgB,SAAhB,EAA2B;MAAE,QAAA,EAAU;IAAZ,CAA3B,CAAjC;IACA,EAAE,CAAC,IAAH,CAAQ,EAAE,CAAC,SAAH,CAAa,gBAAb,EAA+B,CAAE,SAAF,CAA/B,CAAR;AACA,WAAO;EANY,EAtBrB;;;EA+BA,IAAC,CAAA,aAAD,GAAiB,QAAA,CAAA,CAAA,EAAA;;AAEf,QAAA,IAAA,EAAA;IAAA,IAAA,GAAgB,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,sBAArB,CAAb;IAChB,aAAA,GAAgB,IAAI,CAAC,QAAL,CAAc,OAAO,CAAC,GAAR,CAAA,CAAd,EAA6B,IAA7B;IAChB,IAAC,CAAA,GAAD,CAAK,CAAA,0BAAA,CAAA,CAA6B,GAAA,CAAI,aAAJ,CAA7B,CAAA,CAAL;IACA,EAAE,CAAC,aAAH,CAAiB,IAAjB,EAAuB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,QAAxB,CAAA,CAAvB;AACA,WAAO;EANQ;AA/BjB",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/OPS-DOCUMENTS'\n# debug                     = CND.get_logger 'debug',     badge\n# alert                     = CND.get_logger 'alert',     badge\n# whisper                   = CND.get_logger 'whisper',   badge\n# warn                      = CND.get_logger 'warn',      badge\n# help                      = CND.get_logger 'help',      badge\n# urge                      = CND.get_logger 'urge',      badge\n# info                      = CND.get_logger 'info',      badge\nPD                        = require 'pipedreams'\nPATH                      = require 'path'\nFS                        = require 'fs'\n\n\n#===========================================================================================================\n# DOCUMENTS\n#-----------------------------------------------------------------------------------------------------------\n@restore_documents = ->\n  ### Will be used to restore previous state, open new documents; for now, just opens the default file. ###\n  ### TAINT auto-create file when not present ###\n  file_path = PATH.resolve PATH.join __dirname, '../.cache/default.md'\n  S.codemirror.editor.doc.setValue FS.readFileSync file_path, { encoding: 'utf-8', }\n  XE.emit PD.new_event '^open-document', { file_path, }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@save_document = ->\n  ### Will be used to save active document; currently just saves default file. ###\n  path          = PATH.resolve PATH.join __dirname, '../.cache/default.md'\n  relative_path = PATH.relative process.cwd(), path\n  @log \"µ38873 saving document to #{rpr relative_path}\"\n  FS.writeFileSync path, S.codemirror.editor.doc.getValue()\n  return null\n"
  ]
}