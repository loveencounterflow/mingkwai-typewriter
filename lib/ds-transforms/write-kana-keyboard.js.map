{
  "version": 3,
  "file": "write-kana-keyboard.js",
  "sourceRoot": "../..",
  "sources": [
    "src/ds-transforms/write-kana-keyboard.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/DS-TRANSFORMS/WRITE-KANA-KEYBOARD'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nFS                        = require 'fs'\nPATH                      = require 'path'\nPD                        = require 'pipedreams'\n{ $\n  $async\n  select }                = PD\n{ assign\n  jr }                    = CND\nTRIODE                    = require 'triode'\nJACONV                    = require 'jaconv'\nrequire '../exception-handler'\n#-----------------------------------------------------------------------------------------------------------\n@_drop_extension          = ( path ) -> path[ ... path.length - ( PATH.extname path ).length ]\n@_xray                    = ( text ) -> ( ( ( chr.codePointAt 0 ).toString 16 ) for chr in Array.from text )\n@$as_line                 = -> $ ( d, send ) => send ( jr d ) + '\\n'\n@_resolve_dec_entities    = ( text ) -> text.replace /&#([0-9a-f]+);/ig,  ( $0, $1 ) -> String.fromCodePoint ( parseInt $1, 10 )\n@_resolve_hex_entities    = ( text ) -> text.replace /&#x([0-9a-f]+);/ig, ( $0, $1 ) -> String.fromCodePoint ( parseInt $1, 16 )\n@_resolve_entities        = ( text ) -> @_resolve_dec_entities @_resolve_hex_entities text\n\n\n# debug rpr @_resolve_entities 'xxx&#x20;xxx'\n# process.exit 1\n\n#-----------------------------------------------------------------------------------------------------------\n@$name_fields = ->\n  return $ ( d, send ) =>\n    [ transliteration, target, ] = d\n    send { transliteration, target, }\n\n#-----------------------------------------------------------------------------------------------------------\n@$feed_triode = ->\n  last    = Symbol 'last'\n  triode  = TRIODE.new()\n  return $ { last, }, ( d, send ) =>\n    return send triode if d is last\n    triode.set d.transliteration, d.target\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$remove_inline_comments = => PD.$watch ( d ) =>\n  d.target = d.target.replace /\\s+#\\s+.*$/g, ''\n\n#-----------------------------------------------------------------------------------------------------------\n@$add_katakana = => $ ( d ) =>\n  send d\n  d = assign {}, d\n  d.transliteration = d.transliteration.toUpperCase()\n  d.target          = JACONV.toKatakana d.target\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$write_kbd = ( target_path ) =>\n  pipeline = []\n  pipeline.push PD.$watch ( triode ) => debug 'µ7887-11', triode.get_all_superkeys()\n  pipeline.push $ ( triode, send ) => send triode.replacements_as_js_module_text()\n  pipeline.push PD.write_to_file target_path\n  return PD.$tee PD.pull pipeline...\n\n#-----------------------------------------------------------------------------------------------------------\n@$write_cdt = ( target_path ) =>\n  pipeline = []\n  pipeline.push $ ( triode, send ) => send triode.as_js_module_text()\n  pipeline.push PD.write_to_file target_path\n  return PD.$tee PD.pull pipeline...\n\n#-----------------------------------------------------------------------------------------------------------\n@write_cache = ( settings ) -> new Promise ( resolve, reject ) =>\n  kbd_target_filename  = ( @_drop_extension PATH.basename settings.source_path ) + '.kbd.js'\n  cdt_target_filename  = ( @_drop_extension PATH.basename settings.source_path ) + '.cdt.js'\n  kbd_target_path      = PATH.resolve PATH.join __dirname, '../../.cache', kbd_target_filename\n  cdt_target_path      = PATH.resolve PATH.join __dirname, '../../.cache', cdt_target_filename\n  help \"translating #{rpr PATH.relative process.cwd(), settings.source_path}\"\n  #.........................................................................................................\n  convert = =>\n    pipeline = []\n    pipeline.push PD.read_from_file settings.source_path\n    pipeline.push PD.$split_wsv 2\n    pipeline.push @$name_fields()\n    pipeline.push @$remove_inline_comments()\n    pipeline.push @$resolve_entities()\n    pipeline.push @$add_katakana()\n    pipeline.push @$feed_triode()\n    ( pipeline.push PD.$watch ( triode ) -> settings.postprocess triode ) if settings.postprocess?\n    # pipeline.push PD.$show()\n    pipeline.push @$write_kbd kbd_target_path\n    pipeline.push @$write_cdt cdt_target_path\n    pipeline.push PD.$drain =>\n      help \"wrote output to #{rpr PATH.relative process.cwd(), kbd_target_path}\"\n      resolve()\n    PD.pull pipeline...\n    return null\n  #.........................................................................................................\n  convert()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  L = @\n  do ->\n    #.......................................................................................................\n    settings =\n      source_path:  PATH.resolve PATH.join __dirname, '../../db/jp_kana.wsv'\n      postprocess: ( triode ) ->\n        triode.disambiguate_subkey 'n', 'n.'\n        triode.disambiguate_subkey 'v', 'v.'\n        for subkey, superkeys of triode.get_all_superkeys()\n          help \"µ46474 resolving #{rpr subkey} -> #{rpr superkeys}\"\n          # triode.apply_replacements_recursively subkey\n        return null\n    await L.write_cache settings\n    # #.......................................................................................................\n    # settings =\n    #   source_path:  PATH.resolve PATH.join __dirname, '../../db/gr_gr.keyboard.wsv'\n    #   postprocess: ( triode ) ->\n    #     debug 'µ77622', triode.get_all_superkeys()\n    #   #   triode.disambiguate_subkey 'n', 'n.'\n    #   #   triode.disambiguate_subkey 'v', 'v.'\n    #   #   for subkey, superkeys of triode.get_all_superkeys()\n    #   #     help \"µ46474 resolving #{rpr subkey} -> #{rpr superkeys}\"\n    #   #     triode.apply_replacements_recursively subkey\n    #   #   return null\n    # await L.write_cache settings\n    # help 'ok'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  ]
}