{
  "version": 3,
  "file": "write-kana-keyboard.js",
  "sourceRoot": "../..",
  "sources": [
    "src/ds-transforms/write-kana-keyboard.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'IME/EXPERIMENTS/KB'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nFS                        = require 'fs'\nPATH                      = require 'path'\nPD                        = require 'pipedreams'\n{ $\n  $async\n  select }                = PD\n{ assign\n  jr }                    = CND\nTRIODE                    = require 'triode'\n\n#-----------------------------------------------------------------------------------------------------------\nxray = ( text ) -> ( ( ( chr.codePointAt 0 ).toString 16 ) for chr in Array.from text )\n\n#-----------------------------------------------------------------------------------------------------------\n@$as_line = -> $ ( d, send ) => send ( jr d ) + '\\n'\n\n#-----------------------------------------------------------------------------------------------------------\n@$name_fields = ->\n  return $ ( d, send ) =>\n    [ transliteration, target, ] = d\n    send { transliteration, target, }\n\n#-----------------------------------------------------------------------------------------------------------\n@$feed_triode = ->\n  last    = Symbol 'last'\n  triode  = TRIODE.new()\n  return $ { last, }, ( d, send ) =>\n    return send triode if d is last\n    triode.set d.transliteration, d.target\n    return null\n\n#-----------------------------------------------------------------------------------------------------------\n@$translate_to_js = ->\n  return $ ( triode, send ) =>\n    send triode.replacements_as_js_module_text()\n\n#-----------------------------------------------------------------------------------------------------------\n@write_keyboard = ( settings ) -> new Promise ( resolve, reject ) =>\n  target_filename = ( PATH.basename settings.source_path ) + '.js'\n  target_path     = PATH.resolve PATH.join __dirname, '../../.cache', target_filename\n  help \"translating #{rpr PATH.relative process.cwd(), settings.source_path}\"\n  #.........................................................................................................\n  get_unames_byline = =>\n    pipeline        = []\n    # pipeline.push @$filter_unames()\n    # pipeline.push @$as_line()\n    pipeline.push PD.write_to_file target_path\n    return PD.pull pipeline...\n  #.........................................................................................................\n  convert = =>\n    pipeline        = []\n    pipeline.push PD.read_from_file settings.source_path\n    pipeline.push PD.$split_wsv 2\n    pipeline.push @$name_fields()\n    pipeline.push @$feed_triode()\n    ( pipeline.push PD.$watch ( triode ) -> settings.postprocess triode ) if settings.postprocess?\n    pipeline.push @$translate_to_js()\n    # pipeline.push PD.$show()\n    pipeline.push PD.$tee get_unames_byline()\n    pipeline.push PD.$drain =>\n      help \"wrote output to #{rpr PATH.relative process.cwd(), target_path}\"\n      resolve()\n    PD.pull pipeline...\n    return null\n  #.........................................................................................................\n  convert()\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  L = @\n  do ->\n    #.......................................................................................................\n    settings =\n      source_path:  PATH.resolve PATH.join __dirname, '../../db/jp_kana.hrgn.keyboard.wsv'\n      postprocess: ( triode ) ->\n        triode.disambiguate_subkey 'n', 'n.'\n        triode.disambiguate_subkey 'v', 'v.'\n        for subkey, superkeys of triode.get_all_superkeys()\n          help \"µ46474 resolving #{rpr subkey} -> #{rpr superkeys}\"\n          triode.apply_replacements_recursively subkey\n        return null\n    await L.write_keyboard settings\n    #.......................................................................................................\n    settings =\n      source_path:  PATH.resolve PATH.join __dirname, '../../db/gr_gr.keyboard.wsv'\n      postprocess: ( triode ) ->\n        debug 'µ77622', triode.get_all_superkeys()\n      #   triode.disambiguate_subkey 'n', 'n.'\n      #   triode.disambiguate_subkey 'v', 'v.'\n      #   for subkey, superkeys of triode.get_all_superkeys()\n      #     help \"µ46474 resolving #{rpr subkey} -> #{rpr superkeys}\"\n      #     triode.apply_replacements_recursively subkey\n      #   return null\n    await L.write_keyboard settings\n    help 'ok'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
  ]
}