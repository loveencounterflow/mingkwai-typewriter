// Generated by CoffeeScript 2.3.2
(function() {
  'use strict';
  var CND, FS, PATH, S, badge, debug, help, i, key, len, module_name, ops, path, ref, ref1, rpr, value;

  /* TAINTs

  * separate:

    * `focus` (a mechanism used by the browser)

    * ?`select`, `choose`? for the action of selecting one particular candidate

    * ??? for what is called `focusframe` now

    these are three different things and should be called different names.

  * accordingly, rename `focusframe` and those `*_focus*` methods that refer to it instead of to browser focus

  * use module-global `S`: this code will only ever run a single input instance; where it does use modules
    that potentially serve several independent consumers, `S` will not be used as argument anyway

  * refactor code into (local) modules

   */
  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = '明快打字机/OPS';

  debug = CND.get_logger('debug', badge);

  // alert                     = CND.get_logger 'alert',     badge
  // whisper                   = CND.get_logger 'whisper',   badge
  // warn                      = CND.get_logger 'warn',      badge
  help = CND.get_logger('help', badge);

  // urge                      = CND.get_logger 'urge',      badge
  // info                      = CND.get_logger 'info',      badge
  // inspect                   = ( require 'util' ).inspect
  // # TRAP                      = require 'mousetrap'
  // KEYS                      = require '../lib/keys'
  // T                         = require '../lib/templates'
  PATH = require('path');

  FS = require('fs');

  //...........................................................................................................
  require('../lib/exception-handler');

  S = require('../lib/settings');

  /* module-global configuration and editor state object */  global.S = S;

  //###########################################################################################################
  // Assemble On-Page Script from its modules:
  ops = {};

  path = PATH.resolve(PATH.join(__dirname, '../lib/'));

  ref = FS.readdirSync(path);
  for (i = 0, len = ref.length; i < len; i++) {
    module_name = ref[i];
    if (!module_name.endsWith('.js')) {
      continue;
    }
    if (!module_name.startsWith('ops-')) {
      continue;
    }
    help(`µ44744 loading ${module_name}`);
    ref1 = require(PATH.join('../lib', module_name));
    for (key in ref1) {
      value = ref1[key];
      if (ops[key] != null) {
        throw new Error(`name collision in module ${module_name}: ${rpr(key)}`);
      }
      ops[key] = value;
    }
  }

  // debug 'µ37333', ( k for k of ops )
  jQuery(ops.init.bind(ops));

}).call(this);

//# sourceMappingURL=ops.js.map
