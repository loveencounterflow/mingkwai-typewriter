{
  "version": 3,
  "file": "types.js",
  "sourceRoot": "..",
  "sources": [
    "src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/OPS-TRANSCRIPTION'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\n\n#-----------------------------------------------------------------------------------------------------------\nisa = ( x, type ) ->\n  throw new Error \"µ77733 expected 2 arguments, got #{arity}\" unless ( arity = arguments.length ) is 2\n  throw new Error \"µ77733 expected a text, got a #{type}\"     unless ( type = CND.type_of type ) is 'text'\n  throw new Error \"µ77733 unknown type #{rpr type}\"           unless ( tester = @[ type ] )?\n  return tester x\n\n#-----------------------------------------------------------------------------------------------------------\nisa.validate = ( x, type, message = null ) ->\n  throw new Error \"µ77733 unknown type #{rpr type}\" unless ( tester = @[ type ] )?\n  unless tester x\n    throw new Error message ? \"µ77733 expected a #{type}, got a #{CND.type_of x}\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nisa.boolean              = CND.isa_boolean\nisa.buffer               = CND.isa_buffer\nisa.function             = CND.isa_function\nisa.generator            = CND.isa_generator\nisa.generator_function   = CND.isa_generator_function\nisa.infinity             = CND.isa_infinity\n# isa.jsarguments          = CND.isa_jsarguments\nisa.arraybuffer        = CND.isa_jsarraybuffer\nisa.nodejs_buffer             = CND.isa_jsbuffer\n# isa.jsctx                = CND.isa_jsctx\n# isa.jsdate               = CND.isa_jsdate\nisa.error              = CND.isa_jserror\nisa.global             = CND.isa_jsglobal\nisa.nan         = CND.isa_jsnotanumber\nisa.regex              = CND.isa_jsregex\nisa.undefined          = CND.isa_jsundefined\n# isa.jswindow             = CND.isa_jswindow\nisa.list                 = CND.isa_list\nisa.null                 = CND.isa_null\nisa.nullorundefined      = CND.isa_nullorundefined\nisa.number               = CND.isa_number\n### TAINT object/pod distinction? ###\nisa.object               = CND.isa_object\nisa.pod                  = CND.isa_pod\nisa.primitive            = CND.isa_primitive\nisa.symbol               = CND.isa_symbol\nisa.text                 = CND.isa_text\n\n\nschemas =\n  #.........................................................................................................\n  position:\n    # $id:      'http://codemirror.net/types/position'\n    type:     'object'\n    properties:\n      line:   { type: 'number', not: { 'type': 'null', }, }\n      ch:     { type: 'number', not: { 'type': 'null', }, }\n    required: [ 'line', 'ch', ]\n  #.........................................................................................................\n  range:\n    # $id:      'http://codemirror.net/types/range'\n    type:     'object'\n    properties:\n      from:       { $ref: 'position', }\n      to:         { $ref: 'position', }\n    required: [ 'from', 'to', ]\n    #.......................................................................................................\n\n\n############################################################################################################\nhub = OVAL.new_validation_hub()\ndo ->\n  for typename, schema of schemas\n    schema.$id = typename\n    OVAL.add_schema hub, schema\n\n\n############################################################################################################\nunless module.parent?\n  probes = [\n    { line: 42, }\n    { line: 42, ch: 21, }\n    { line: 42, ch: null, }\n    { line: 42, ch: 'x', }\n    ]\n  for probe in probes\n    error = null\n    try\n      OVAL.validate hub, 'position', probe\n    catch error\n      warn ( jr probe ), error.message\n    unless error?\n      help ( jr probe ), 'ok'\n\n  probes = [\n    { from: { line: 42, },            to: { line: 10, ch: 11, }, }\n    { from: { line: 42, ch: 21, },    to: { line: 10, ch: 11, }, }\n    { from: { line: 42, ch: 21, },    to: { line: 10, ch: null, }, }\n    { from: { line: 42, ch: null, },  to: { line: 10, ch: 11, }, }\n    { from: { line: 42, ch: 'x', },   to: { line: 10, ch: 11, }, }\n    ]\n  for probe in probes\n    error = null\n    try\n      OVAL.validate hub, 'range', probe\n    catch error\n      warn ( jr probe ), error.message\n    unless error?\n      help ( jr probe ), 'ok'\n\n\n"
  ]
}