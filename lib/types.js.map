{
  "version": 3,
  "file": "types.js",
  "sourceRoot": "..",
  "sources": [
    "src/types.coffee"
  ],
  "names": [],
  "mappings": ";AAGA;EAAA;AAAA,MAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,EAAA,GAA4B,IAAI,CAAC;;EACjC,SAAA,GAA4B,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC;;EACpD,SAAA,GAA4B,IAAI,SAAJ,CAAc,MAAM,CAAC,OAArB,EAhB5B;;;EAmBA,IAAC,CAAA,OAAD,CAAS,UAAT,EACE;IAAA,KAAA,EACE;MAAA,WAAA,EAA4B,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAmB,CAAnB;MAAT,CAA5B;MACA,qBAAA,EAA4B,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,QAAD,CAAmB,CAAnB,EAAsB,MAAtB,EAA8B,IAA9B;MAAT,CAD5B;MAEA,mBAAA,EAA4B,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,KAAL,CAAmB,CAAC,CAAC,IAArB;MAAT,CAF5B;MAGA,iBAAA,EAA4B,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,KAAL,CAAmB,CAAC,CAAC,EAArB;MAAT;IAH5B;EADF,CADF,EAnBA;;;EA2BA,IAAC,CAAA,OAAD,CAAS,OAAT,EACE;IAAA,KAAA,EACE;MAAA,WAAA,EAA4B,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAmB,CAAnB;MAAT,CAA5B;MACA,qBAAA,EAA4B,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,QAAD,CAAmB,CAAnB,EAAsB,MAAtB,EAA8B,IAA9B;MAAT,CAD5B;MAEA,sBAAA,EAA4B,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,QAAL,CAAmB,CAAC,CAAC,IAArB;MAAT,CAF5B;MAGA,oBAAA,EAA4B,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,QAAL,CAAmB,CAAC,CAAC,EAArB;MAAT;IAH5B;EADF,CADF,EA3BA;;;EAoCA,IAAO,qBAAP;IACE,KADF;;AApCA",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'position',\n  tests:\n    '? isa pod':                ( x ) -> @isa.object        x\n    '? has_keys line, ch':      ( x ) -> @has_keys          x, 'line', 'ch'\n    '?.line is a count':        ( x ) -> @isa.count         x.line\n    '?.ch is a count':          ( x ) -> @isa.count         x.ch\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'range',\n  tests:\n    '? isa pod':                ( x ) -> @isa.object        x\n    '? has_keys from, to':      ( x ) -> @has_keys          x, 'from', 'to'\n    '?.from is a position':     ( x ) -> @isa.position      x.from\n    '?.to is a position':       ( x ) -> @isa.position      x.to\n\n\n############################################################################################################\nunless module.parent?\n  null\n\n\n"
  ]
}