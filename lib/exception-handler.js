// Generated by CoffeeScript 2.3.2
(function() {
  'use strict';
  var CND, alert, badge, debug, echo, help, info, log, rpr, urge, warn, whisper;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = '明快打字机/exception-handler';

  log = CND.get_logger('plain', badge);

  debug = CND.get_logger('debug', badge);

  info = CND.get_logger('info', badge);

  warn = CND.get_logger('warn', badge);

  alert = CND.get_logger('alert', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  whisper = CND.get_logger('whisper', badge);

  echo = CND.echo.bind(CND);

  //-----------------------------------------------------------------------------------------------------------
  this.exit_handler = function(exception) {
    var head, i, len, line, message, print, ref, ref1, tail;
    // debug '55567', rpr exception
    print = alert;
    message = 'ROGUE EXCEPTION: ' + ((ref = exception != null ? exception.message : void 0) != null ? ref : "an unrecoverable condition occurred");
    if ((exception != null ? exception.where : void 0) != null) {
      message += '\n--------------------\n' + exception.where + '\n--------------------';
    }
    [head, ...tail] = message.split('\n');
    print(CND.reverse(' ' + head + ' '));
    for (i = 0, len = tail.length; i < len; i++) {
      line = tail[i];
      warn(line);
    }
    /* TAINT should have a way to set exit code explicitly */
    whisper((ref1 = exception != null ? exception.stack : void 0) != null ? ref1 : "(exception undefined, no stack)");
    return process.exit(1);
  };

  this.exit_handler = this.exit_handler.bind(this);

  if (typeof app === 'undefined') {
    process.on('uncaughtException', this.exit_handler);
    process.on('unhandledRejection', this.exit_handler);
  } else {
    (require('electron-unhandled'))({
      showDialog: true,
      logger: this.exit_handler
    });
  }

}).call(this);

//# sourceMappingURL=exception-handler.js.map
