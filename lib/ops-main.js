// Generated by CoffeeScript 2.3.2
(function() {
  'use strict';
  var CND, KEYS, alert, badge, debug, help, info, rpr, urge, warn, whisper;

  //###########################################################################################################
  CND = require('cnd');

  rpr = CND.rpr;

  badge = '明快打字机/OPS-MAKESHIFT';

  debug = CND.get_logger('debug', badge);

  alert = CND.get_logger('alert', badge);

  whisper = CND.get_logger('whisper', badge);

  warn = CND.get_logger('warn', badge);

  help = CND.get_logger('help', badge);

  urge = CND.get_logger('urge', badge);

  info = CND.get_logger('info', badge);

  KEYS = require('../lib/keys');

  //...........................................................................................................
  require('../lib/exception-handler');

  //===========================================================================================================

  //-----------------------------------------------------------------------------------------------------------
  this.always_focus_editor = function() {
    /* TAINT this method inhibits selecting, copying text from logger, candidates */
    this.always_focus_editor = function()/* do not add any more handlers with this method after first call */ {};
    (jQuery('div.CodeMirror-code')).on('blur', function() {
      return this.focus();
    });
    (jQuery('div.CodeMirror-code')).focus();
    return null;
  };

  //===========================================================================================================
  // FOCUSFRAME
  //-----------------------------------------------------------------------------------------------------------
  this.toggle_focusframe = function() {
    if (S.focus_is_candidates) {
      this.focusframe_to_editor();
    } else {
      this.focusframe_to_candidates();
    }
    return null;
  };

  //-----------------------------------------------------------------------------------------------------------
  this.adjust_focusframe = function() {
    if (S.focus_is_candidates) {
      this.focusframe_to_candidates();
    } else {
      this.focusframe_to_editor();
    }
    return null;
  };

  //-----------------------------------------------------------------------------------------------------------
  this.focusframe_to_editor = function() {
    this._focusframe_to('leftbar');
    return S.focus_is_candidates = false;
  };

  //-----------------------------------------------------------------------------------------------------------
  this.focusframe_to_candidates = function() {
    this._focusframe_to('rightbar');
    return S.focus_is_candidates = true;
  };

  //-----------------------------------------------------------------------------------------------------------
  this._focusframe_to = function(target) {
    var ff, height, left, tgto, top, width;
    if (CND.isa_text(target)) {
      // target      = jQuery( document.activeElement )
      target = jQuery(target);
    }
    ff = jQuery('focusframe');
    if (target.length < 1) {
      return;
    }
    // ff.offset     target.offset()
    // ff.width      target.width()
    // ff.height     target.height()
    tgto = target.offset();
    if (tgto == null) {
      return;
    }
    left = tgto.left - 1;
    top = tgto.top - 1;
    width = target.width() + 2;
    height = target.height() + 2;
    ff.animate({left, top, width, height}, 100);
    return null;
  };

  //===========================================================================================================
  // WINDOW
  //-----------------------------------------------------------------------------------------------------------
  this.get_window = function() {
    return (require('electron')).remote.getCurrentWindow();
  };

  //===========================================================================================================
  // APP INITIALIZATION
  //-----------------------------------------------------------------------------------------------------------
  this.init = async function() {
    //.........................................................................................................
    /* Initialize CodeMirror */
    S.codemirror.editor = CodeMirror.fromTextArea((jQuery('#codemirror'))[0], S.codemirror.settings);
    S.codemirror.editor.setSize(null, '100%');
    this.always_focus_editor();
    KEYS.generate_keboard_events(jQuery('html'));
    //.........................................................................................................
    await this.load_transcriptors();
    await this.add_menu();
    //.........................................................................................................
    await this.set_codemirror_keybindings();
    await this.set_codemirror_event_bindings();
    await this.set_app_keybindings();
    await this.set_xe_event_bindings();
    await this.set_dom_event_bindings();
    //.........................................................................................................
    await this.focusframe_to_editor();
    await this.dbg_set_debugging_globals();
    // await @dbg_list_all_css_classes_in_document()
    // await @cm_select_all()
    //.........................................................................................................
    await this.restore_documents();
    await this.focusframe_to_editor();
    //.........................................................................................................
    return null;
  };

}).call(this);

//# sourceMappingURL=ops-main.js.map
