{
  "version": 3,
  "file": "ops.js",
  "sourceRoot": "..",
  "sources": [
    "src/ops.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/OPS'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\ninspect                   = ( require 'util' ).inspect\n# log                       = ( P... ) -> process.stdout.write ( rpr P ) + '\\n'\n# TRAP                      = require 'mousetrap'\n# { app, globalShortcut, }  = require 'electron'\n# PTVR                      = require '../lib/lib/ptv-reader'\nIME                       = require '../lib/ime'\nSTATE                     = require '../lib/state'\nT                         = require '../lib/templates'\n### https://github.com/sindresorhus/electron-unhandled ###\nrequire                   '../lib/exception-handler'\n#...........................................................................................................\n# { remote, }               = require 'electron'\nPD                        = require 'pipedreams'\nXE                        = require '../lib/xemitter'\n\nXE.listen_to_all ( key, event ) -> debug '28823', key, event.key # ( k for k of event )\n\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to 'KEYS/kblevels/change', @, ( { S, key, } ) ->\n  ### TAINT bind keys using configuration ###\n  { name, toggle, } = key\n  #.........................................................................................................\n  S.bind_left   = ( toggle is 'on' ) if name is 'alt'\n  S.bind_right  = ( toggle is 'on' ) if name is 'altgr'\n  #.........................................................................................................\n  if S.bind_left  then  ( $ 'lbbar' ).show() ### TAINT ###\n  else                  ( $ 'lbbar' ).hide() ### TAINT ###\n  if S.bind_right then  ( $ 'rbbar' ).show() ### TAINT ###\n  else                  ( $ 'rbbar' ).hide() ### TAINT ###\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@on_add_selection = ( uie ) ->\n  { S, } = uie\n  debug '44545', 'selected row nr:', S.row_idx + 1\n  chr = S.rows?[ S.row_idx ]?.glyph\n  XE.emit 'IME/input/add', { S, row_idx: S.row_idx, chr, }\n  uie.event.preventDefault()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to 'IME/input/add', @, ( { S, row_idx, chr, } ) ->\n  debug \"update output area\"\n  debug \"reset candidates area, input box\"\n  ### TAINT remove buffer ###\n  S.buffer.push chr\n  # ( $ '#output-area .inbox' ).text S.buffer.join ''\n  S.codemirror.editor.replaceSelection chr\n  ( $ '#text-input' ).text ''\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@on_scroll = ( S, event ) =>\n  # if event.originalEvent.deltaY < 0 then  @navigate_vertically S, -1\n  # else                                    @navigate_vertically S, +1\n  if S.ignore_next_scroll_events >= 0\n    S.ignore_next_scroll_events += -1\n    # debug 'scroll', 'discard'\n    return true\n  S.ignore_next_scroll_events = 1\n  delta_px                    = ( S.scroller.scrollTop() - S.scroller_last_top ) / S.candidates_tr_height\n  S.scroller_last_top         = S.scroller.scrollTop()\n  # debug 'scroll', delta_px\n  # CND.dir event\n  # return false if delta_px is 0\n  if delta_px < 0 then  @navigate_vertically S, -1\n  else                  @navigate_vertically S, +1\n  return false;\n\n#-----------------------------------------------------------------------------------------------------------\n@on_wheel = ( S, event ) =>\n  if event.originalEvent.deltaY < 0 then  @navigate_vertically S, -1\n  else                                    @navigate_vertically S, +1\n  return false;\n\n#-----------------------------------------------------------------------------------------------------------\n@on_vertical_navigation = ( uie ) ->\n  switch uie.name\n    when 'up'         then  delta = -1\n    when 'down'       then  delta = +1\n    when 'page-up'    then  delta = -10\n    when 'page-down'  then  delta = +10\n  @navigate_vertically uie.S, delta\n  uie.event.preventDefault()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@navigate_vertically = ( S, delta ) ->\n  new_row_idx       = S.row_idx + delta\n  corrected_row_idx = Math.max 0,                 new_row_idx\n  corrected_row_idx = Math.min S.rows.length - 1, corrected_row_idx\n  #.........................................................................................................\n  XE.emit 'WINDOW/scroll/vertical', {\n    S,\n    from: S.row_idx         + 1,\n    via:  new_row_idx       + 1,\n    to:   corrected_row_idx + 1, }\n  #.........................................................................................................\n  S.row_idx         = corrected_row_idx\n  element           = $( '#candidates tr' ).eq S.row_idx\n  if element?.offset? and ( element_offset = element.offset() )?\n    delta_px                      = element_offset.top - S.shade_offset_top\n    S.scroller_last_top           = S.scroller.scrollTop() + delta_px\n    S.ignore_next_scroll_events  += +1\n    S.scroller.scrollTop S.scroller_last_top\n    # ( ( $ element ).find '.glyph' ).css 'font-size', '125%'\n  return null\n\n# #-----------------------------------------------------------------------------------------------------------\n# XE.listen_to 'WINDOW/scroll/vertical', @, ({ S, from, via, to, }) ->\n#   whisper \"WINDOW/scroll/vertical #{from} -> #{via} -> #{to}\"\n\n#-----------------------------------------------------------------------------------------------------------\n@on_input = ( S, event ) ->\n  self    = $ @\n  await IME.fetch_rows S, S.input.text()\n  rows    = []\n  columns = [ 'short_iclabel', 'glyph', 'value', ]\n  for row, idx in S.rows\n    rows.push T.get_row_html [ [ 'nr', idx + 1, ], ( [ key, row[ key ], ] for key in columns )..., ]\n  rows = rows.join '\\n'\n  ( $ '#candidates tr'    ).remove()\n  ( $ '#candidates tbody' ).append rows\n  ( $ '#qdt'              ).text S.qdt\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@init = ->\n  #.........................................................................................................\n  ### Instantiate state, add important UI elements ###\n  S                     = STATE.new()\n  S.candidates          = $ '#candidates'\n  S.shade_offset_top    = ( $ 'shade.foreground' ).offset().top\n  S.input               = $ '#text-input'\n  S.scroller            = $ 'scroller'\n  #.........................................................................................................\n  ### Make sure focus is on input element ###\n  ( $ '#text-input' ).focus()\n  #.........................................................................................................\n  ### TAINT temporary; will use KB event, icon, dedicated method for this ###\n  ### Switch focus on click on editor ###\n  ( $ 'topbar content' ).on 'click', ( event ) =>\n    if S.codemirror.is_enlarged then  property = { 'height': ( $ 'topbar content' ).css 'min-height' }\n    else                              property = { 'height': ( $ 'topbar content' ).css 'max-height' }\n    S.codemirror.is_enlarged = not S.codemirror.is_enlarged\n    ( $ 'topbar content' ).animate property, 100\n  #.........................................................................................................\n  ### Register key and mouse events ###\n  # KEYS.syphon_key_and_mouse_events S, $ '#text-input'\n  # KEYS.register 'axis', 'vertical',     ( uie )   => @on_vertical_navigation  uie\n  # KEYS.register 'slot', 'Enter',        ( uie )   => @on_add_selection        uie\n  S.scroller.on 'wheel',                ( event ) => @on_wheel                S, event\n  S.scroller.on 'scroll',               ( event ) => @on_scroll               S, event\n  S.input.on 'input',                   ( event ) => @on_input                S, event\n  ### use event for this? ###\n  S.scroller_last_top = S.scroller.scrollTop()\n  #.........................................................................................................\n  ### Measure table row height, adjust shade ###\n  S.candidates_tr_height = ( $ '#candidates tr' ).height()\n  ( $ 'shade' ).height S.candidates_tr_height * 1.1\n  #.........................................................................................................\n  ### Initialize KBLevels (partially) ###\n  XE.emit 'KEYS/kblevels/change', { S, key: { name: 'alt',   toggle: ( if S.kblevels.alt   then 'on' else 'off' ), }, }\n  XE.emit 'KEYS/kblevels/change', { S, key: { name: 'altgr', toggle: ( if S.kblevels.altgr then 'on' else 'off' ), }, }\n  #.........................................................................................................\n  ### Initialize CodeMirror ###\n  S.codemirror.editor = CodeMirror.fromTextArea ( $ '#codemirror' )[ 0 ], S.codemirror.settings\n  # S.codemirror.editor.replaceSelection 'this is the editor'\n  S.codemirror.editor.setSize null, '100%'\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n$ init.bind @\n"
  ]
}