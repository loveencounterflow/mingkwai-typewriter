{
  "version": 3,
  "file": "ops.js",
  "sourceRoot": "..",
  "sources": [
    "src/ops.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n### TAINTs\n\n* separate:\n\n  * `focus` (a mechanism used by the browser)\n\n  * ?`select`, `choose`? for the action of selecting one particular candidate\n\n  * ??? for what is called `focusframe` now\n\n  these are three different things and should be called different names.\n\n* accordingly, rename `focusframe` and those `*_focus*` methods that refer to it instead of to browser focus\n\n* use module-global `S`: this code will only ever run a single input instance; where it does use modules\n  that potentially serve several independent consumers, `S` will not be used as argument anyway\n\n* refactor code into (local) modules\n\n###\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/OPS'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\ninspect                   = ( require 'util' ).inspect\n# TRAP                      = require 'mousetrap'\nKEYS                      = require '../lib/keys'\nSTATE                     = require '../lib/state'\nT                         = require '../lib/templates'\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nrequire                   '../lib/exception-handler'\n# require                   '../lib/kana-input'\nrequire                   '../lib/kanji-input'\n#...........................................................................................................\nPD                        = require 'pipedreams'\n{ jr, }                   = CND\n{ $\n  $async }                = PD\n# XE                        = null\nXE                        = require '../lib/xemitter'\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\n#...........................................................................................................\n# `S` is the module-global configuration and editor state object; this will probably factored out into a\n# separate local module to make it `require`able to other modules running in the renderer process:\nS                         = null\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to_all ( key, d ) ->\n  # whisper 'µ99823', key #, jr d\n  v       = d.value\n  { S, }  = v\n  logger  = jQuery '#logger'\n  ( logger.find ':first-child').remove() while logger.children().length > 10\n  message = switch key\n    when '^kblevel' then  ( k for k, toggle of S.kblevels when toggle ).join ', '\n    else                  ( k for k         of d.value                ).join ', '\n  #.........................................................................................................\n  logger.append ( \"<div>#{Date.now()}: #{rpr key}: #{message}</div>\" )\n  console.log 'µ33499', Date.now(), key, d\n  # if ( kblevels = d.value?.S?.kblevels )\n  #   logger.append ( \"<div>#{Date.now()}: kblevels: #{rpr kblevels}</div>\" )\n  logger.scrollTop logger[ 0 ].scrollHeight\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@log = ( text ) ->\n  ### TAINT code duplication ###\n  logger = jQuery '#logger'\n  ( logger.find ':first-child').remove() while logger.children().length > 10\n  ### TAINT should escape text (or accept HTML?) ###\n  logger.append ( \"<div>#{Date.now()}: #{text}</div>\" )\n  console.log 'µ33499', Date.now(), text\n  logger.scrollTop logger[ 0 ].scrollHeight\n  return null\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @on_add_selection = ( uie ) ->\n#   { S, } = uie\n#   debug '44545', 'selected row nr:', S.row_idx + 1\n#   chr = S.rows?[ S.row_idx ]?.glyph\n#   XE.emit 'IME/input/add', { S, row_idx: S.row_idx, chr, }\n#   uie.event.preventDefault()\n#   return null\n\n# #-----------------------------------------------------------------------------------------------------------\n# XE.listen_to 'IME/input/add', @, ( { S, row_idx, chr, } ) ->\n#   debug \"update output area\"\n#   debug \"reset candidates area, input box\"\n#   ### TAINT remove buffer ###\n#   S.buffer.push chr\n#   # ( jQuery '#output-area .inbox' ).text S.buffer.join ''\n#   S.codemirror.editor.replaceSelection chr\n#   ( jQuery '#text-input' ).text ''\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\n@on_scroll = ( S, event ) =>\n  # if event.originalEvent.deltaY < 0 then  @navigate_vertically S, -1\n  # else                                    @navigate_vertically S, +1\n  if S.ignore_next_scroll_events >= 0\n    S.ignore_next_scroll_events += -1\n    # debug 'scroll', 'discard'\n    return true\n  S.ignore_next_scroll_events = 1\n  delta_px                    = ( S.scroller.scrollTop() - S.scroller_last_top ) / S.candidates_tr_height\n  S.scroller_last_top         = S.scroller.scrollTop()\n  # debug 'scroll', delta_px\n  # CND.dir event\n  # return false if delta_px is 0\n  if delta_px < 0 then  @navigate_vertically S, -1\n  else                  @navigate_vertically S, +1\n  return false;\n\n#-----------------------------------------------------------------------------------------------------------\n@on_wheel = ( S, event ) =>\n  if event.originalEvent.deltaY < 0 then  @navigate_vertically S, -1\n  else                                    @navigate_vertically S, +1\n  return false;\n\n#-----------------------------------------------------------------------------------------------------------\n@on_vertical_navigation = ( uie ) ->\n  switch uie.name\n    when 'up'         then  delta = -1\n    when 'down'       then  delta = +1\n    when 'page-up'    then  delta = -10\n    when 'page-down'  then  delta = +10\n  @navigate_vertically uie.S, delta\n  uie.event.preventDefault()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@navigate_vertically = ( S, delta ) ->\n  new_row_idx       = S.row_idx + delta\n  corrected_row_idx = Math.max 0,                 new_row_idx\n  corrected_row_idx = Math.min S.rows.length - 1, corrected_row_idx\n  #.........................................................................................................\n  XE.emit 'WINDOW/scroll/vertical', {\n    S,\n    from: S.row_idx         + 1,\n    via:  new_row_idx       + 1,\n    to:   corrected_row_idx + 1, }\n  #.........................................................................................................\n  S.row_idx         = corrected_row_idx\n  element           = ( jQuery '#candidates tr' ).eq S.row_idx\n  if element?.offset? and ( element_offset = element.offset() )?\n    delta_px                      = element_offset.top - S.shade_offset_top\n    S.scroller_last_top           = S.scroller.scrollTop() + delta_px\n    S.ignore_next_scroll_events  += +1\n    S.scroller.scrollTop S.scroller_last_top\n    # ( ( jQuery element ).find '.glyph' ).css 'font-size', '125%'\n  return null\n\n# # #-----------------------------------------------------------------------------------------------------------\n# # XE.listen_to 'WINDOW/scroll/vertical', @, ({ S, from, via, to, }) ->\n# #   whisper \"WINDOW/scroll/vertical #{from} -> #{via} -> #{to}\"\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to '^candidates', @, ( d ) ->\n  @focusframe_to_candidates S unless S.focus_is_candidates\n  v       = d.value\n  { S, }  = v\n  rows    = ( ( T.get_flexgrid_html ( idx + 1 ), glyph ) for glyph, idx in v.candidates ).join '\\n'\n  ( jQuery '#candidates-flexgrid div' ).remove()\n  ( jQuery '#candidates-flexgrid'     ).append rows\n  #.........................................................................................................\n  glyphboxes = jQuery '#candidates-flexgrid div.glyph'\n  glyphboxes.on 'click', ( e ) =>\n    me = jQuery e.target\n    glyphboxes.removeClass  'cdtsel'\n    me.addClass             'cdtsel' ### 'candidate select' (WTF?) ###\n    @log \"µ33983 #{me.text()} #{jr me.offset()}\"\n  #.........................................................................................................\n  return null\n\n\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to '^load-documents', @, ( d ) ->\n  ### Will be used to restore previous state, open new documents; for now, just opens the default file. ###\n  ### TAINT auto-create file when not present ###\n  file_path = PATH.resolve PATH.join __dirname, '../.cache/default.md'\n  d.value.S.codemirror.editor.doc.setValue FS.readFileSync file_path, { encoding: 'utf-8', }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT use proper keybinding API to define key bindings ###\nXE.listen_to '^keyboard', @, ( d ) ->\n  { key, S, } = d.value\n  if ( key.name is 'ctrl+s' ) and ( key.move is 'up' )\n    XE.emit PD.new_event '^save-document', { S, }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to '^save-document', @, ( d ) ->\n  ### Will be used to save active document; currently just saves default file. ###\n  file_path = PATH.resolve PATH.join __dirname, '../.cache/default.md'\n  @log \"saving document to #{rpr file_path}\"\n  FS.writeFileSync file_path, d.value.S.codemirror.editor.doc.getValue()\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@focusframe_to_editor = ( S ) ->\n  @_focusframe_to S, 'leftbar'\n  ### TAINT use method, must be possible to remap ###\n  S.focus_is_candidates = false\n  # S.kblevels.shift      = false\n@focusframe_to_candidates = ( S ) ->\n  @_focusframe_to S, 'rightbar'\n  ### TAINT use method, must be possible to remap ###\n  S.focus_is_candidates = true\n  # S.kblevels.shift      = false\n@focusframe_to_logger = ( S ) ->\n  @_focusframe_to S, '#logger'\n  ### TAINT use method, must be possible to remap ###\n  S.focus_is_candidates = false\n  # S.kblevels.shift      = false\n\n#-----------------------------------------------------------------------------------------------------------\n@_focusframe_to = ( S, target ) ->\n  # target      = jQuery( document.activeElement )\n  target      = jQuery target if CND.isa_text target\n  ff          = jQuery 'focusframe'\n  return if target.length < 1\n  # ff.offset     target.offset()\n  # ff.width      target.width()\n  # ff.height     target.height()\n  tgto        = target.offset()\n  return unless tgto?\n  left    = tgto.left       - 1\n  top     = tgto.top        - 1\n  width   = target.width()  + 2\n  height  = target.height() + 2\n  ff.animate { left, top, width, height, }, 100\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n### TAINT use proper keybinding API to define key bindings ###\nXE.listen_to '^kblevel', @, ( d ) ->\n  ### map kblevel 'shift' to manual editor/candidates focus selection ###\n  v       = d.value\n  { S, }  = v\n  # debug 'µ87444', S.kblevels.shift\n  if ( S.focus_is_candidates = S.kblevels.shift ) then  @focusframe_to_candidates S\n  else                                                  @focusframe_to_editor     S\n  ### TAINT consider to re-set focus after mouse clicks to elsewhere in GUI ###\n  ### Make browser focus always stay on editor: ###\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@always_focus_editor = ->\n  @always_focus_editor = -> ### do not add any more handlers with this method after first call ###\n  ( jQuery 'div.CodeMirror-code' ).on 'blur', -> @focus()\n  ( jQuery 'div.CodeMirror-code' ).focus()\n  return null\n\n# #-----------------------------------------------------------------------------------------------------------\n# ### TAINT use proper keybinding API to define key bindings ###\n# XE.listen_to '^keyboard', @, ( d ) ->\n#   { key, S, } = d.value\n#   return unless ( key.move is 'up' )\n#   switch key.name\n#     when 'left'     then  @focusframe_to_editor     S\n#     when 'right'    then  @focusframe_to_candidates S\n#     when 'up'       then  @focusframe_to_editor     S\n#     when 'down'     then  @focusframe_to_logger     S\n#   return null\n\n#-----------------------------------------------------------------------------------------------------------\n@init_keymap = ( S ) ->\n  ### TAINT don't define method inside of object ###\n  mktw_keymap = {\n    #.......................................................................................................\n    'Left': ( cm ) ->\n      if S.focus_is_candidates\n        debug 'µ77644-1', \"cursor movement goes to candidates\"\n      else\n        CodeMirror.commands.goCharLeft cm\n      return null\n    #.......................................................................................................\n    'Right': ( cm ) ->\n      if S.focus_is_candidates\n        @select_next_candidate()\n      else\n        CodeMirror.commands.goCharRight cm\n      return null\n    #.......................................................................................................\n    'Up': ( cm ) ->\n      if S.focus_is_candidates\n        debug 'µ77644-2', \"cursor movement goes to candidates\"\n      else\n        CodeMirror.commands.goLineUp cm\n      return null\n    #.......................................................................................................\n    'Down': ( cm ) ->\n      if S.focus_is_candidates\n        debug 'µ77644-2', \"cursor movement goes to candidates\"\n      else\n        CodeMirror.commands.goLineDown cm\n      return null\n    #.......................................................................................................\n    'Tab': ( cm ) ->\n      if S.focus_is_candidates\n        debug 'µ77644-2', \"cursor movement goes to candidates\"\n      else\n        CodeMirror.commands.defaultTab cm\n      return null\n    }\n  #.........................................................................................................\n  S.codemirror.editor.addKeyMap mktw_keymap\n  # CodeMirror.normalizeKeyMap keyMap.mktw\n  # S.codemirror.editor.setOption 'extraKeys', mktw_keymap\n  # S.codemirror.commands.foobar = ( cm ) -> debug 'µ46644', 'foobar'\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@init = ->\n  # { remote, }               = require 'electron'\n  # XE                        = remote.require './xemitter'\n  #.........................................................................................................\n  ### Instantiate state, add important UI elements ###\n  S                     = STATE.new()\n  S.candidates          =\n    jq:           jQuery '#candidates'\n    selected:\n      id:         null\n  S.focus_is_candidates = false\n  #.........................................................................................................\n  # ### Register key and mouse events ###\n  # S.scroller.on 'wheel',                ( event ) => @on_wheel                S, event\n  # S.scroller.on 'scroll',               ( event ) => @on_scroll               S, event\n  # S.input.on 'input',                   ( event ) => @on_input                S, event\n  # ### use event for this? ###\n  # S.scroller_last_top = S.scroller.scrollTop()\n  #.........................................................................................................\n  ### Initialize CodeMirror ###\n  S.codemirror.editor = CodeMirror.fromTextArea ( jQuery '#codemirror' )[ 0 ], S.codemirror.settings\n  S.codemirror.editor.setSize null, '100%'\n  S.codemirror.editor.on 'inputRead', ( me, change ) -> XE.emit PD.new_event '^raw-input', { S, change, }\n  S.codemirror.editor.on 'change', ( me, change ) ->\n    ### TAINT when inserting results, will there be a change event? ###\n    return null unless change.origin is '+delete'\n    XE.emit PD.new_event '^raw-input', { S, change, }\n  @always_focus_editor()\n  #.........................................................................................................\n  S.codemirror.editor.on 'beforeChange',    ( me, change      ) -> whisper 'µ66653', 'beforeChange',  jr change\n  S.codemirror.editor.on 'change',          ( me, change      ) -> whisper 'µ66653', 'change',        jr change\n  # S.codemirror.editor.on 'changes',         ( me, changes     ) -> whisper 'µ66653', 'changes',       jr changes\n  # S.codemirror.editor.on 'cursorActivity',  ( me              ) -> whisper 'µ66653', 'cursorActivity'\n  # S.codemirror.editor.on 'keyHandled',      ( me, name, event ) -> whisper 'µ66653', 'keyHandled',    jr name\n  # S.codemirror.editor.on 'inputRead',       ( me, change      ) -> whisper 'µ66653', 'inputRead',     jr change\n  #.........................................................................................................\n  ### Register key and mouse events ###\n  KEYS.syphon_key_and_mouse_events S, jQuery 'html'\n  # KEYS.register 'axis', 'vertical',     ( uie )   => @on_vertical_navigation  uie\n  # KEYS.register 'slot', 'Enter',        ( uie )   => @on_add_selection        uie\n  XE.emit PD.new_event '^load-documents', { S, }\n  @focusframe_to_editor S\n  @init_keymap S\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\njQuery init.bind @\n\n\n###\ncm.findPosH(start: {line, ch}, amount: integer, unit: string, visually: boolean) → {line, ch, ?hitSide: boolean}\ncm.findPosV(start: {line, ch}, amount: integer, unit: string) → {line, ch, ?hitSide: boolean}\ncm.findWordAt(pos: {line, ch}) → {anchor: {line, ch}, head: {line, ch}}\ncm.hasFocus() → boolean\n\ndoc.addSelection        = (anchor: {line, ch}, ?head: {line, ch})\ndoc.changeGeneration    = (?closeEvent: boolean) → integer\ndoc.eachLine            = (f: (line: LineHandle))\ndoc.eachLine            = (start: integer, end: integer, f: (line: LineHandle))\ndoc.extendSelection     = (from: {line, ch}, ?to: {line, ch}, ?options: object)\ndoc.extendSelections    = (heads: array<{line, ch}>, ?options: object)\ndoc.extendSelectionsBy  = (f: function(range: {anchor, head}) → {line, ch}), ?options: object)\ndoc.firstLine           = () → integer\ndoc.getCursor           = (?start: string) → {line, ch}\ndoc.getExtending        = () → boolean\ndoc.getLine             = (n: integer) → string\ndoc.getLineHandle       = (num: integer) → LineHandle\ndoc.getLineNumber       = (handle: LineHandle) → integer\ndoc.getRange            = (from: {line, ch}, to: {line, ch}, ?separator: string) → string\ndoc.getSelection        = (?lineSep: string) → string\ndoc.getSelections       = (?lineSep: string) → array<string>\ndoc.getValue            = (?separator: string) → string\ndoc.isClean             = (?generation: integer) → boolean\ndoc.lastLine            = () → integer\ndoc.lineCount           = () → integer\ndoc.listSelections      = () → array<{anchor, head}>\ndoc.markClean           = ()\ndoc.replaceRange        = (replacement: string, from: {line, ch}, to: {line, ch}, ?origin: string)\ndoc.replaceSelection    = (replacement: string, ?select: string)\ndoc.replaceSelections   = (replacements: array<string>, ?select: string)\ndoc.setCursor           = (pos: {line, ch}|number, ?ch: number, ?options: object)\ndoc.setExtending        = (value: boolean)\ndoc.setSelection        = (anchor: {line, ch}, ?head: {line, ch}, ?options: object)\ndoc.setSelections       = (ranges: array<{anchor, head}>, ?primary: integer, ?options: object)\ndoc.setValue            = (content: string)\ndoc.somethingSelected   = () → boolean\n###\n\n\n\n\n"
  ]
}