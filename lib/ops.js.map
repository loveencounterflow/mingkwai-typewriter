{
  "version": 3,
  "file": "ops.js",
  "sourceRoot": "..",
  "sources": [
    "src/ops.coffee"
  ],
  "names": [],
  "mappings": ";AACA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,KAAA;;;;;;;;;;;;;;;;;;;;;;;EA0BA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B,EA7B5B;;;;;EAiCA,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B,EAjC5B;;;;;;;;EAwCA,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR,EAzC5B;;;EA2CA,OAAA,CAA0B,0BAA1B;;EACA,MAAM,CAAC,CAAP,GAA4B,OAAA,CAAQ,iBAAR;;sDAC5B,MAAM,CAAC,GAAP,GAA4B,CAAA;;EAC5B,MAAM,CAAC,EAAP,GAA4B,OAAA,CAAQ,kBAAR,EA9C5B;;;;EAkDA,IAAA,GAAQ,IAAI,CAAC,OAAL,CAAa,IAAI,CAAC,IAAL,CAAU,SAAV,EAAqB,SAArB,CAAb;;AACR;EAAA,KAAA,qCAAA;;IACE,IAAA,CAAgB,WAAW,CAAC,QAAZ,CAAwB,KAAxB,CAAhB;AAAA,eAAA;;IACA,IAAA,CAAgB,WAAW,CAAC,UAAZ,CAAwB,MAAxB,CAAhB;AAAA,eAAA;;IACA,IAAA,CAAK,CAAA,eAAA,CAAA,CAAkB,WAAlB,CAAA,CAAL;AACA;IAAA,KAAA,WAAA;;MACE,IAAyE,gBAAzE;QAAA,MAAM,IAAI,KAAJ,CAAU,CAAA,yBAAA,CAAA,CAA4B,WAA5B,CAAwC,EAAxC,CAAA,CAA4C,GAAA,CAAI,GAAJ,CAA5C,CAAA,CAAV,EAAN;;MACA,GAAK,CAAA,GAAA,CAAL,GAAa;IAFf;EAJF,CAnDA;;;EA2DA,MAAA,CAAO,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,CAAP;AA3DA",
  "sourcesContent": [
    "\n'use strict'\n\n### TAINTs\n\n* separate:\n\n  * `focus` (a mechanism used by the browser)\n\n  * ?`select`, `choose`? for the action of selecting one particular candidate\n\n  * ??? for what is called `focusframe` now\n\n  these are three different things and should be called different names.\n\n* accordingly, rename `focusframe` and those `*_focus*` methods that refer to it instead of to browser focus\n\n* use module-global `S`: this code will only ever run a single input instance; where it does use modules\n  that potentially serve several independent consumers, `S` will not be used as argument anyway\n\n* refactor code into (local) modules\n\n###\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/OPS'\ndebug                     = CND.get_logger 'debug',     badge\n# alert                     = CND.get_logger 'alert',     badge\n# whisper                   = CND.get_logger 'whisper',   badge\n# warn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\n# urge                      = CND.get_logger 'urge',      badge\n# info                      = CND.get_logger 'info',      badge\n# inspect                   = ( require 'util' ).inspect\n# # TRAP                      = require 'mousetrap'\n# KEYS                      = require '../lib/keys'\n# T                         = require '../lib/templates'\nPATH                      = require 'path'\nFS                        = require 'fs'\n#...........................................................................................................\nrequire                   '../lib/exception-handler'\nglobal.S                  = require '../lib/settings' ### global configuration and editor state object ###\nglobal.OPS                = {}\nglobal.XE                 = require '../lib//xemitter'\n\n############################################################################################################\n# Assemble On-Page Script from its modules:\npath  = PATH.resolve PATH.join __dirname, '../lib/'\nfor module_name in FS.readdirSync path\n  continue unless module_name.endsWith    '.js'\n  continue unless module_name.startsWith  'ops-'\n  help \"µ44744 loading #{module_name}\"\n  for key, value of require PATH.join '../lib', module_name\n    throw new Error \"name collision in module #{module_name}: #{rpr key}\" if OPS[ key ]?\n    OPS[ key ] = value\n# debug 'µ37333', ( k for k of OPS )\njQuery OPS.init.bind OPS\n\n"
  ]
}