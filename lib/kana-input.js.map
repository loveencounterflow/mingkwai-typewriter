{
  "version": 3,
  "file": "kana-input.js",
  "sourceRoot": "..",
  "sources": [
    "src/kana-input.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/KANA-INPUT'\nlog                       = CND.get_logger 'plain',     badge\ndebug                     = CND.get_logger 'debug',     badge\ninfo                      = CND.get_logger 'info',      badge\nwarn                      = CND.get_logger 'warn',      badge\nalert                     = CND.get_logger 'alert',     badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\n#...........................................................................................................\n# parallel                  = require './parallel-promise'\nDB                        = require './db'\n#...........................................................................................................\n# _format                   = require 'pg-format'\n# I                         = ( value ) -> _format '%I', value\n# L                         = ( value ) -> _format '%L', value\n#...........................................................................................................\n{ jr, }                   = CND\nPD                        = require 'pipedreams'\n# { remote, }               = require 'electron'\n# XE                        = remote.require './xemitter'\nXE                        = require './xemitter'\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\n#...........................................................................................................\n# TRIODE                    = require 'triode'\n\n#-----------------------------------------------------------------------------------------------------------\n@load_keyboard = ->\n  ### TAINT compare filedates, refresh cache ###\n  return require '../.cache/jp_kana.hrgn.keyboard.wsv.js'\n  # return require '../.cache/gr_gr.keyboard.wsv.js'\nkey_replacer = @load_keyboard()\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to '^raw-input', ( d ) ->\n  #.........................................................................................................\n  { S, change, }  = d.value\n  { editor, }     = S.codemirror\n  { doc, }        = editor\n  cursor          = doc.getCursor()\n  #.........................................................................................................\n  ### TAINT kludge to collapse multiple selections into a single one ###\n  CodeMirror.commands.singleSelection editor\n  #.........................................................................................................\n  line_idx        = cursor.line\n  line_handle     = doc.getLineHandle line_idx\n  line_info       = doc.lineInfo line_handle ### TAINT consider to use line_idx, forego line_handle ###\n  { text, }       = line_info\n  # #.........................................................................................................\n  # ### TAINT put this event further up in the chain ###\n  # ### make behavior on paste configurable ###\n  # debug 'µ77733', change\n  # if change.origin is 'paste'\n  #   head  = Array.from text\n  #   tail  = []\n  #   while ( chr = head.shift() )\n  #     tail.push chr\n  #     text = tail.join ''\n  #     XE.emit PD.new_event '^input', { S, change, editor, doc, line_idx, text, }\n  # #.........................................................................................................\n  # else\n  XE.emit PD.new_event '^input', { S, change, editor, doc, line_idx, text, }\n  #.........................................................................................................\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to '^input', ( d ) ->\n  v = d.value\n  #.........................................................................................................\n  # whisper 'µ34343', xrpr change\n  text            = key_replacer v.text\n  urge 'µ34343', ( xrpr v.text ) + ' -> ' + ( xrpr text )\n  ### TAINT replacing the text of the entire line is one way to insert new text, but it would conceivably\n  more elegant and / or more correct if we just replaced in the editor what we're replacing in the text ###\n  ### TAINT consider to build micro shim so we get rid of these (for our use case) bizarre API choices ###\n  ### Announce to ignore next `+delete` event as it did not originate from user input: ###\n  await XE.emit PD.new_event '^ignore-delete'\n  CodeMirror.commands.goLineEnd   v.editor\n  CodeMirror.commands.delLineLeft v.editor\n  v.doc.replaceSelection text\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to '<keyboard-level', ( d ) ->\n  # urge 'µ55402', jr d\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to '>keyboard-level', ( d ) ->\n  # urge 'µ55403', jr d\n\n\n\n\n"
  ]
}