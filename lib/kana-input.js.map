{
  "version": 3,
  "file": "kana-input.js",
  "sourceRoot": "..",
  "sources": [
    "src/kana-input.coffee"
  ],
  "names": [],
  "mappings": ";AAEA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,aAAA,EAAA,WAAA,EAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAKA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAhB5B;;;EAkBA,IAAA,GAA4B,OAAA,CAAQ,MAAR,EAlB5B;;;;EAqBA,EAAA,GAA4B,OAAA,CAAQ,MAAR,EArB5B;;;;;;;EA2BA,CAAA,CAAE,EAAF,CAAA,GAA4B,GAA5B;;EACA,EAAA,GAA4B,OAAA,CAAQ,YAAR,EA5B5B;;;;EA+BA,EAAA,GAA4B,OAAA,CAAQ,YAAR,EA/B5B;;;EAiCA,MAAA,GAA4B,OAAA,CAAQ,QAAR;;EAC5B,aAAA,GAAsB,OAAA,CAAQ,0BAAR;;EACtB,WAAA,GAAqB;;EACrB,MAAA,GAAmB,GApCnB;;;EAuCA,IAAC,CAAA,gBAAD,GAAoB,QAAA,CAAA,CAAA;AACnB,QAAA,CAAA,EAAA,GAAA,EAAA,MAAA,EAAA;IAAA,WAAA,GAAc,MAAM,CAAC,GAAP,CAAA;IACiB,KAAA,+CAAA;MAAI,CAAE,MAAF,EAAU,MAAV;MAAnC,WAAa,CAAA,MAAA,CAAb,GAAwB;IAAO;AAC/B,WAAO;EAHY,EAvCpB;;;;EA8CA,IAAA,CAAK,UAAL,EA9CA;;;EAgDA,EAAE,CAAC,QAAH,CAAY,QAAZ,EAAsB,QAAA,CAAE,CAAF,CAAA;AACrB,QAAA;IAAA,IAAA,CAAK,QAAL,EAAe,EAAA,CAAG,CAAH,CAAf;IACA,OAAA,GAAU,WAAa,CAAA,CAAC,CAAC,KAAF;IACvB,IAAmB,OAAO,CAAC,MAAR,KAAkB,CAArC;AAAA,aAAO,KAAP;;AACA,WAAO,OAAS,CAAA,CAAA,CAAK,CAAA,CAAA;EAJA,CAAtB;;EAMG,CAAA,MAAA,QAAA,CAAA,CAAA;WACF,KAAA,CAAM,QAAN,EAAgB,CAAA,MAAM,EAAE,CAAC,IAAH,CAAQ,EAAE,CAAC,SAAH,CAAa,QAAb,EAAuB,KAAvB,CAAR,CAAN,CAAhB;EADE,CAAA,CAAH,CAAA,EAtDA;;;EA0DA,EAAE,CAAC,SAAH,CAAa,iBAAb,EAAgC,QAAA,CAAE,CAAF,CAAA,EAAA,CAAhC,EA1DA;;;;;EA8DA,EAAE,CAAC,SAAH,CAAa,iBAAb,EAAgC,QAAA,CAAE,CAAF,CAAA,EAAA,CAAhC,EA9DA;;;;;EAmEA,IAAC,CAAA,gBAAD,CAAA;AAnEA",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = '明快打字机/KANA-INPUT'\nlog                       = CND.get_logger 'plain',     badge\ndebug                     = CND.get_logger 'debug',     badge\ninfo                      = CND.get_logger 'info',      badge\nwarn                      = CND.get_logger 'warn',      badge\nalert                     = CND.get_logger 'alert',     badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\n#...........................................................................................................\n# parallel                  = require './parallel-promise'\nDB                        = require './db'\n#...........................................................................................................\n# _format                   = require 'pg-format'\n# I                         = ( value ) -> _format '%I', value\n# L                         = ( value ) -> _format '%L', value\n#...........................................................................................................\n{ jr, }                   = CND\nPD                        = require 'pipedreams'\n# { remote, }               = require 'electron'\n# XE                        = remote.require './xemitter'\nXE                        = require './xemitter'\n#...........................................................................................................\nTRIODE                    = require 'triode'\nkana_keyboard \t\t\t\t\t\t= require '../db/kana.keyboard.json'\nkana_triode \t\t\t\t\t\t\t= null\nbuffer \t\t\t\t\t\t\t\t\t\t= []\n\n#-----------------------------------------------------------------------------------------------------------\n@load_kana_triode = ->\n\tkana_triode = TRIODE.new()\n\tkana_triode[ source ] = target for [ source, target, ] in kana_keyboard\n\treturn null\n\n# #-----------------------------------------------------------------------------------------------------------\n# XE.listen_to_all ( key, d ) -> whisper 'µ44532', jr d\nurge __filename\n#-----------------------------------------------------------------------------------------------------------\nXE.contract '^input', ( d ) ->\n\turge 'µ55401', jr d\n\tmatches\t= kana_triode[ d.value ]\n\treturn null unless matches.length is 1\n\treturn matches[ 0 ][ 1 ]\n\ndo ->\n\tdebug 'µ98933', await XE.emit PD.new_event '^input', 'kyo'\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to '<keyboard-level', ( d ) ->\n\t# urge 'µ55402', jr d\n\n#-----------------------------------------------------------------------------------------------------------\nXE.listen_to '>keyboard-level', ( d ) ->\n\t# urge 'µ55403', jr d\n\n\n############################################################################################################\n@load_kana_triode()\n\n\n"
  ]
}